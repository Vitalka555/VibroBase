import QtQuick 2.9
import QtQuick.Controls 2.2
import QtQuick.Layouts 1.3
import QtQuick.Controls.Material 2.2

Item {
    id: item
    property string sep1: 1/2*parseFloat(tfoborotka.text)*(1-parseFloat(tfdtk.text)/((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)*Math.cos(parseFloat(tfugol.text)*Math.PI/180))
    property string vn1: 1/2*parseFloat(tfoborotka.text)*parseFloat(tfztk.text)*(1+parseFloat(tfdtk.text)/((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)*Math.cos(parseFloat(tfugol.text)*Math.PI/180))
    property string nar1: 1/2*parseFloat(tfoborotka.text)*parseFloat(tfztk.text)*(1-parseFloat(tfdtk.text)/((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)*Math.cos(parseFloat(tfugol.text)*Math.PI/180))
    property string fvn1: 1/2*parseFloat(tfoborotka.text)*parseFloat(tfztk.text)*(1+parseFloat(tfdtk.text)/((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)*Math.cos(parseFloat(tfugol.text)*Math.PI/180))
    property string fnar1: 1/2*parseFloat(tfoborotka.text)*parseFloat(tfztk.text)*(1-parseFloat(tfdtk.text)/((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)*Math.cos(parseFloat(tfugol.text)*Math.PI/180))
    property string tk1: 1/2*parseFloat(tfoborotka.text)*((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)/parseFloat(tfdtk.text)*(1-Math.pow((parseFloat(tfdtk.text)/((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)*Math.cos(parseFloat(tfugol.text)*Math.PI/180)),2))
    property string ftk1: 2*parseFloat(tfoborotka.text)*((((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)+parseFloat(tfdtk.text))/parseFloat(tfdtk.text))*((((parseFloat(tfvd.text)+parseFloat(tfnd.text))/2)-parseFloat(tfdtk.text))/parseFloat(tfdtk.text))
    property string reztk1: 0.848*2.11*100000/(parseFloat(tfdtk.text)/1000*2*7812)
    property string f1: parseFloat(tfoborotka.text)
    property string sepotklon: sep1/2
    property string radzaz: parseFloat(tfztk.text)*parseFloat(tfoborotka.text)/2
    property string tol: 0.45*parseFloat(tfztk.text)*parseFloat(tfoborotka.text)
    property string xx: tfchastotaplus.text
    property string xxx: tfchastotaplus.text !== "" ? tfchastotaplus.text : "0"
    property string plus: Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))
    property string minus: Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))

    property real hei: str1col1.height+str2col1.height+str3col1.height+str4col1.height+str5col1.height+
                       str6col1.height+str7col1.height+str8col1.height+str9col1.height+str10col1.height+
                       str11col1.height+str12col1.height+str13col1.height+str14col1.height+str15col1.height+
                       str16col1.height+str17col1.height+str18col1.height+str19col1.height+str20col1.height+
                       str21col1.height+str22col1.height+str23col1.height+str24col1.height+str25col1.height+
                       str26col1.height+str27col1.height+str28col1.height+str29col1.height+str30col1.height+
                       str31col1.height+str32col1.height+str33col1.height+str34col1.height+str35col1.height+
                       str36col1.height+str37col1.height+str2inf.height+str3inf.height+str4inf.height+
                       str5inf.height+str6inf.height+str7inf.height+str8inf.height+str9inf.height+str10inf.height+
                       str11inf.height+str12inf.height+str13inf.height+str14inf.height+str15inf.height+
                       str16inf.height+str17inf.height+str18inf.height+str19inf.height+str20inf.height+
                       str21inf.height+str22inf.height+str23inf.height+str24inf.height+str25inf.height+
                       str26inf.height+str27inf.height+str28inf.height+str29inf.height+str30inf.height+
                       str31inf.height+str32inf.height+str33inf.height+str34inf.height+str35inf.height+
                       str36inf.height+str37inf.height
    property real heiflick: str2col1.height+str3col1.height+str4col1.height+str5col1.height+
                       str6col1.height+str7col1.height+str8col1.height+str9col1.height+str10col1.height+
                       str11col1.height+str12col1.height+str13col1.height+str14col1.height+str15col1.height+
                       str16col1.height+str17col1.height+str18col1.height+str19col1.height+str20col1.height+
                       str21col1.height+str22col1.height+str23col1.height+str24col1.height+str25col1.height+
                       str26col1.height+str27col1.height+str28col1.height+str29col1.height+str30col1.height+
                       str31col1.height+str32col1.height+str33col1.height+str34col1.height+str35col1.height+
                       str36col1.height+str37col1.height+str2inf.height+str3inf.height+str4inf.height+
                       str5inf.height+str6inf.height+str7inf.height+str8inf.height+str9inf.height+str10inf.height+
                       str11inf.height+str12inf.height+str13inf.height+str14inf.height+str15inf.height+
                       str16inf.height+str17inf.height+str18inf.height+str19inf.height+str20inf.height+
                       str21inf.height+str22inf.height+str23inf.height+str24inf.height+str25inf.height+
                       str26inf.height+str27inf.height+str28inf.height+str29inf.height+str30inf.height+
                       str31inf.height+str32inf.height+str33inf.height+str34inf.height+str35inf.height+
                       str36inf.height+str37inf.height
    Component.onCompleted: {
        qmlCalculator()
        oboznachenieRU.tex = stackView.calc_data[0]
        oboznachenieEN.tex = stackView.calc_data[1]
        tfvd.text = stackView.calc_data[3]
        tfnd.text = stackView.calc_data[4]
        tfdtk.text = stackView.calc_data[5]
        tfztk.text = stackView.calc_data[6]
        tfugol.text = stackView.calc_data[7]
        tip.text = stackView.calc_data[2]
        tfoborotka.text = stackView.chastota/60
        butraschet.clicked()
    }
    Rectangle {
        id: opisanie
        anchors.top: parent.top
        anchors.topMargin: 0
        anchors.left: parent.left
        anchors.leftMargin: 0
        width: window.width*5/6+5
        //anchors.bottom: parent.bottom
        height: row1.height + row2.height + row3.height + row3dop.height + row4.height
        //color: "lightblue"
        z: 1
        RowLayout {
            id: row1
            anchors.top: parent.top
            anchors.topMargin: 0
            anchors.left: parent.left
            anchors.leftMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0
            height: oboznachenieRU.height + 5
            Text {
                id: oboznachenieRU
                property string tex: "Неизвестно"
                anchors.left: parent.left
                anchors.leftMargin: 5
                anchors.verticalCenter: parent.verticalCenter
                font.bold: true
                font.pixelSize: 28
                color: "blue"
                text: "RU: " + tex
            }
            Text {
                id: oboznachenieEN
                property string tex: "Неизвестно"
                anchors.right: parent.right
                anchors.rightMargin: 5
                anchors.verticalCenter: parent.verticalCenter
                font.bold: true
                font.pixelSize: 28
                color: "blue"
                text: "EN: " + tex
            }
        }
            RowLayout {
                id: row2
                anchors.top: row1.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tip.height + 5
            Text {
                id: tip
                property string tex: "Неизвестно"
                anchors.left: parent.left
                anchors.leftMargin: 5
                anchors.verticalCenter: parent.verticalCenter
                font.bold: true
                font.pixelSize: 20
                color: "green"
                text: ""
            }
        }
            RowLayout {
                id: row3
                anchors.top: row2.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfoborotka.height + 5
            Text {
                id: oborotka
                anchors.left: parent.left
                anchors.leftMargin: 5
                anchors.verticalCenter: parent.verticalCenter
                //font.bold: true
                font.pixelSize: 16
                color: "blue"
                text: "Введите оборотную частоту, Гц:"
            }
            TextField {
                id: tfoborotka
                anchors.left: oborotka.right
                anchors.leftMargin: 5
                anchors.verticalCenter: parent.verticalCenter
                font.pixelSize: 16
                implicitWidth: 100
            }
            Button {
                id: butraschet
                anchors.left: tfoborotka.right
                anchors.leftMargin: 5
                anchors.verticalCenter: parent.verticalCenter
                highlighted: true
                Material.accent: Material.LightBlue
                onClicked: {
//                    sep=sep1;
//                    vn=vn1;
//                    nar=nar1;
//                    fvn=fvn1;
//                    fnar=fnar1;
//                    tk=tk1;
//                    ftk=ftk1;
//                    reztk=reztk1;
                    textstr2col2.state = 'sep1';
                    textstr2col3.state = 'sep2';
                    textstr2col4.state = 'sep3';
                    textstr2col5.state = 'sep4';
                    textstr2col6.state = 'sep5';
                    textstr2col7.state = 'sep6';
                    textstr2col8.state = 'sep7';
                    textstr2col9.state = 'sep8';

                    textstr3col2.state = 'vn1';
                    textstr3col3.state = 'vn2';
                    textstr3col4.state = 'vn3';
                    textstr3col5.state = 'vn4';
                    textstr3col6.state = 'vn5';
                    textstr3col7.state = 'vn6';
                    textstr3col8.state = 'vn7';
                    textstr3col9.state = 'vn8';

                    textstr4col2.state = 'nar1';
                    textstr4col3.state = 'nar2';
                    textstr4col4.state = 'nar3';
                    textstr4col5.state = 'nar4';
                    textstr4col6.state = 'nar5';
                    textstr4col7.state = 'nar6';
                    textstr4col8.state = 'nar7';
                    textstr4col9.state = 'nar8';

                    textstr5col2.state = 'fvn1';
                    textstr5col3.state = 'fvn2';
                    textstr5col4.state = 'fvn3';
                    textstr5col5.state = 'fvn4';
                    textstr5col6.state = 'fvn5';
                    textstr5col7.state = 'fvn6';
                    textstr5col8.state = 'fvn7';
                    textstr5col9.state = 'fvn8';

                    textstr6col2.state = 'fnar1';
                    textstr6col3.state = 'fnar2';
                    textstr6col4.state = 'fnar3';
                    textstr6col5.state = 'fnar4';
                    textstr6col6.state = 'fnar5';
                    textstr6col7.state = 'fnar6';
                    textstr6col8.state = 'fnar7';
                    textstr6col9.state = 'fnar8';

                    textstr7col2.state = 'tk1';
                    textstr7col3.state = 'tk2';
                    textstr7col4.state = 'tk3';
                    textstr7col5.state = 'tk4';
                    textstr7col6.state = 'tk5';
                    textstr7col7.state = 'tk6';
                    textstr7col8.state = 'tk7';
                    textstr7col9.state = 'tk8';

                    textstr8col2.state = 'ftk1';
                    textstr8col3.state = 'ftk2';
                    textstr8col4.state = 'ftk3';
                    textstr8col5.state = 'ftk4';
                    textstr8col6.state = 'ftk5';
                    textstr8col7.state = 'ftk6';
                    textstr8col8.state = 'ftk7';
                    textstr8col9.state = 'ftk8';

                    textstr9col2.state = 'reztk1';

                    textstr10col2.state = 'f1';
                    textstr10col3.state = 'f11';
                    textstr10col4.state = 'f12';

                    textstr11col2.state = 'sepotklon';

                    textstr12col3.state = 'oval';

                    textstr13col2.state = 'rasc1';
                    textstr13col3.state = 'rasc2';

                    textstr14col4.state = 'gran3';
                    textstr14col5.state = 'gran4';
                    textstr14col6.state = 'gran5';
                    textstr14col7.state = 'gran6';
                    textstr14col8.state = 'gran7';
                    textstr14col9.state = 'gran8';

                    textstr15col2.state = 'radzaz';

                    textstr16col2.state = 'nat1';
                    textstr16col3.state = 'nat2';

                    textstr17col2.state = 'pros1'
                    textstr17col3.state = 'pros2'
                    textstr17col4.state = 'pros3'
                    textstr17col5.state = 'pros4'
                    textstr17col6.state = 'pros5'
                    textstr17col7.state = 'pros6'
                    textstr17col8.state = 'pros7'
                    textstr17col9.state = 'pros8'

                    textstr18col2.state = 'zazor1'
                    textstr18col3.state = 'zazor2'
                    textstr18col4.state = 'zazor3'
                    textstr18col5.state = 'zazor4'
                    textstr18col6.state = 'zazor5'
                    textstr18col7.state = 'zazor6'

                    textstr19col2.state = 'perekos1'
                    textstr19col3.state = 'perekos2'

                    textstr20col2.state = 'tol'

                    textstr21col2.state = 'separ1'
                    textstr21col3.state = 'separ2'
                    textstr21col4.state = 'separ3'
                    textstr21col5.state = 'separ4'
                    textstr21col6.state = 'separ5'
                    textstr21col7.state = 'separ6'
                    textstr21col8.state = 'separ7'
                    textstr21col9.state = 'separ8'

                    textstr22col2.state = 'narush1'
                    textstr22col3.state = 'narush2'

                    textstr23col2.state = 'pernar1'
                    textstr23col3.state = 'pernar2'
                    textstr23col4.state = 'pernar3'
                    textstr23col5.state = 'pernar4'
                    textstr23col6.state = 'pernar5'
                    textstr23col7.state = 'pernar6'
                    textstr23col8.state = 'pernar7'
                    textstr23col9.state = 'pernar8'

                    textstr24col2.state = 'pervn1'
                    textstr24col3.state = 'pervn2'
                    textstr24col4.state = 'pervn3'
                    textstr24col5.state = 'pervn4'
                    textstr24col6.state = 'pervn5'
                    textstr24col7.state = 'pervn6'
                    textstr24col8.state = 'pervn7'
                    textstr24col9.state = 'pervn8'

                    textstr25col2.state = 'iznosnar1'
                    textstr25col3.state = 'iznosnar2'
                    textstr25col4.state = 'iznosnar3'

                    textstr26col2.state = 'raknar1'
                    textstr26col3.state = 'raknar2'
                    textstr26col4.state = 'raknar3'
                    textstr26col5.state = 'raknar4'
                    textstr26col6.state = 'raknar5'
                    textstr26col7.state = 'raknar6'
                    textstr26col8.state = 'raknar7'
                    textstr26col9.state = 'raknar8'

                    textstr27col2.state = 'iznosvn1'
                    textstr27col3.state = 'iznosvn2'
                    textstr27col4.state = 'iznosvn3'
                    textstr27col5.state = 'iznosvn4'
                    textstr27col6.state = 'iznosvn5'
                    textstr27col7.state = 'iznosvn6'
                    textstr27col8.state = 'iznosvn7'
                    textstr27col9.state = 'iznosvn8'

                    textstr28col21.state = 'rakvn11'
                    textstr28col22.state = 'rakvn12'
                    textstr28col23.state = 'rakvn13'
                    textstr28col24.state = 'rakvn14'
                    textstr28col25.state = 'rakvn15'
                    textstr28col31.state = 'rakvn21'
                    textstr28col32.state = 'rakvn22'
                    textstr28col33.state = 'rakvn23'
                    textstr28col34.state = 'rakvn24'
                    textstr28col35.state = 'rakvn25'
                    textstr28col41.state = 'rakvn31'
                    textstr28col42.state = 'rakvn32'
                    textstr28col43.state = 'rakvn33'
                    textstr28col44.state = 'rakvn34'
                    textstr28col45.state = 'rakvn35'
                    textstr28col51.state = 'rakvn41'
                    textstr28col52.state = 'rakvn42'
                    textstr28col53.state = 'rakvn43'
                    textstr28col54.state = 'rakvn44'
                    textstr28col55.state = 'rakvn45'
                    textstr28col61.state = 'rakvn51'
                    textstr28col62.state = 'rakvn52'
                    textstr28col63.state = 'rakvn53'
                    textstr28col64.state = 'rakvn54'
                    textstr28col65.state = 'rakvn55'
                    textstr28col71.state = 'rakvn61'
                    textstr28col72.state = 'rakvn62'
                    textstr28col73.state = 'rakvn63'
                    textstr28col74.state = 'rakvn64'
                    textstr28col75.state = 'rakvn65'
                    textstr28col81.state = 'rakvn71'
                    textstr28col82.state = 'rakvn72'
                    textstr28col83.state = 'rakvn73'
                    textstr28col84.state = 'rakvn74'
                    textstr28col85.state = 'rakvn75'
                    textstr28col91.state = 'rakvn81'
                    textstr28col92.state = 'rakvn82'
                    textstr28col93.state = 'rakvn83'
                    textstr28col94.state = 'rakvn84'
                    textstr28col95.state = 'rakvn85'

                    textstr29col21.state = 'raknar11'
                    textstr29col22.state = 'raknar12'
                    textstr29col23.state = 'raknar13'
                    textstr29col24.state = 'raknar14'
                    textstr29col25.state = 'raknar15'
                    textstr29col31.state = 'raknar21'
                    textstr29col32.state = 'raknar22'
                    textstr29col33.state = 'raknar23'
                    textstr29col34.state = 'raknar24'
                    textstr29col35.state = 'raknar25'
                    textstr29col41.state = 'raknar31'
                    textstr29col42.state = 'raknar32'
                    textstr29col43.state = 'raknar33'
                    textstr29col44.state = 'raknar34'
                    textstr29col45.state = 'raknar35'
                    textstr29col51.state = 'raknar41'
                    textstr29col52.state = 'raknar42'
                    textstr29col53.state = 'raknar43'
                    textstr29col54.state = 'raknar44'
                    textstr29col55.state = 'raknar45'
                    textstr29col61.state = 'raknar51'
                    textstr29col62.state = 'raknar52'
                    textstr29col63.state = 'raknar53'
                    textstr29col64.state = 'raknar54'
                    textstr29col65.state = 'raknar55'
                    textstr29col71.state = 'raknar61'
                    textstr29col72.state = 'raknar62'
                    textstr29col73.state = 'raknar63'
                    textstr29col74.state = 'raknar64'
                    textstr29col75.state = 'raknar65'
                    textstr29col81.state = 'raknar71'
                    textstr29col82.state = 'raknar72'
                    textstr29col83.state = 'raknar73'
                    textstr29col84.state = 'raknar74'
                    textstr29col85.state = 'raknar75'
                    textstr29col91.state = 'raknar81'
                    textstr29col92.state = 'raknar82'
                    textstr29col93.state = 'raknar83'
                    textstr29col94.state = 'raknar84'
                    textstr29col95.state = 'raknar85'

                    textstr30col21.state = 'perrakvn11'
                    textstr30col22.state = 'perrakvn12'
                    textstr30col23.state = 'perrakvn13'
                    textstr30col24.state = 'perrakvn14'
                    textstr30col25.state = 'perrakvn15'
                    textstr30col31.state = 'perrakvn21'
                    textstr30col32.state = 'perrakvn22'
                    textstr30col33.state = 'perrakvn23'
                    textstr30col34.state = 'perrakvn24'
                    textstr30col35.state = 'perrakvn25'
                    textstr30col41.state = 'perrakvn31'
                    textstr30col42.state = 'perrakvn32'
                    textstr30col43.state = 'perrakvn33'
                    textstr30col44.state = 'perrakvn34'
                    textstr30col45.state = 'perrakvn35'
                    textstr30col51.state = 'perrakvn41'
                    textstr30col52.state = 'perrakvn42'
                    textstr30col53.state = 'perrakvn43'
                    textstr30col54.state = 'perrakvn44'
                    textstr30col55.state = 'perrakvn45'
                    textstr30col61.state = 'perrakvn51'
                    textstr30col62.state = 'perrakvn52'
                    textstr30col63.state = 'perrakvn53'
                    textstr30col64.state = 'perrakvn54'
                    textstr30col65.state = 'perrakvn55'
                    textstr30col71.state = 'perrakvn61'
                    textstr30col72.state = 'perrakvn62'
                    textstr30col73.state = 'perrakvn63'
                    textstr30col74.state = 'perrakvn64'
                    textstr30col75.state = 'perrakvn65'
                    textstr30col81.state = 'perrakvn71'
                    textstr30col82.state = 'perrakvn72'
                    textstr30col83.state = 'perrakvn73'
                    textstr30col84.state = 'perrakvn74'
                    textstr30col85.state = 'perrakvn75'
                    textstr30col91.state = 'perrakvn81'
                    textstr30col92.state = 'perrakvn82'
                    textstr30col93.state = 'perrakvn83'
                    textstr30col94.state = 'perrakvn84'
                    textstr30col95.state = 'perrakvn85'

                    textstr31col21.state = 'perraknar11'
                    textstr31col22.state = 'perraknar12'
                    textstr31col23.state = 'perraknar13'
                    textstr31col24.state = 'perraknar14'
                    textstr31col25.state = 'perraknar15'
                    textstr31col31.state = 'perraknar21'
                    textstr31col32.state = 'perraknar22'
                    textstr31col33.state = 'perraknar23'
                    textstr31col34.state = 'perraknar24'
                    textstr31col35.state = 'perraknar25'
                    textstr31col41.state = 'perraknar31'
                    textstr31col42.state = 'perraknar32'
                    textstr31col43.state = 'perraknar33'
                    textstr31col44.state = 'perraknar34'
                    textstr31col45.state = 'perraknar35'
                    textstr31col51.state = 'perraknar41'
                    textstr31col52.state = 'perraknar42'
                    textstr31col53.state = 'perraknar43'
                    textstr31col54.state = 'perraknar44'
                    textstr31col55.state = 'perraknar45'
                    textstr31col61.state = 'perraknar51'
                    textstr31col62.state = 'perraknar52'
                    textstr31col63.state = 'perraknar53'
                    textstr31col64.state = 'perraknar54'
                    textstr31col65.state = 'perraknar55'
                    textstr31col71.state = 'perraknar61'
                    textstr31col72.state = 'perraknar62'
                    textstr31col73.state = 'perraknar63'
                    textstr31col74.state = 'perraknar64'
                    textstr31col75.state = 'perraknar65'
                    textstr31col81.state = 'perraknar71'
                    textstr31col82.state = 'perraknar72'
                    textstr31col83.state = 'perraknar73'
                    textstr31col84.state = 'perraknar74'
                    textstr31col85.state = 'perraknar75'
                    textstr31col91.state = 'perraknar81'
                    textstr31col92.state = 'perraknar82'
                    textstr31col93.state = 'perraknar83'
                    textstr31col94.state = 'perraknar84'
                    textstr31col95.state = 'perraknar85'

                    textstr32col2.state = 'per2vn1'
                    textstr32col3.state = 'per2vn2'
                    textstr32col4.state = 'per2vn3'
                    textstr32col5.state = 'per2vn4'
                    textstr32col6.state = 'per2vn5'
                    textstr32col7.state = 'per2vn6'
                    textstr32col8.state = 'per2vn7'
                    textstr32col9.state = 'per2vn8'

                    textstr33col21.state = 'formtk11'
                    textstr33col22.state = 'formtk12'
                    textstr33col23.state = 'formtk13'
                    textstr33col24.state = 'formtk14'
                    textstr33col32.state = 'formtk22'
                    textstr33col33.state = 'formtk23'
                    textstr33col34.state = 'formtk24'
                    textstr33col42.state = 'formtk32'
                    textstr33col43.state = 'formtk33'
                    textstr33col44.state = 'formtk34'
                    textstr33col52.state = 'formtk42'
                    textstr33col53.state = 'formtk43'
                    textstr33col54.state = 'formtk44'
                    textstr33col62.state = 'formtk52'
                    textstr33col63.state = 'formtk53'
                    textstr33col64.state = 'formtk54'
                    textstr33col72.state = 'formtk62'
                    textstr33col73.state = 'formtk63'
                    textstr33col74.state = 'formtk64'
                    textstr33col82.state = 'formtk72'
                    textstr33col83.state = 'formtk73'
                    textstr33col84.state = 'formtk74'
                    textstr33col92.state = 'formtk82'
                    textstr33col93.state = 'formtk83'
                    textstr33col94.state = 'formtk84'

                    textstr34col21.state = 'pertk11'
                    textstr34col22.state = 'pertk12'
                    textstr34col23.state = 'pertk13'
                    textstr34col24.state = 'pertk14'
                    textstr34col25.state = 'pertk15'
                    textstr34col31.state = 'pertk21'
                    textstr34col32.state = 'pertk22'
                    textstr34col33.state = 'pertk23'
                    textstr34col34.state = 'pertk24'
                    textstr34col35.state = 'pertk25'
                    textstr34col41.state = 'pertk31'
                    textstr34col42.state = 'pertk32'
                    textstr34col43.state = 'pertk33'
                    textstr34col44.state = 'pertk34'
                    textstr34col45.state = 'pertk35'
                    textstr34col51.state = 'pertk41'
                    textstr34col52.state = 'pertk42'
                    textstr34col53.state = 'pertk43'
                    textstr34col54.state = 'pertk44'
                    textstr34col55.state = 'pertk45'
                    textstr34col61.state = 'pertk51'
                    textstr34col62.state = 'pertk52'
                    textstr34col63.state = 'pertk53'
                    textstr34col64.state = 'pertk54'
                    textstr34col65.state = 'pertk55'
                    textstr34col71.state = 'pertk61'
                    textstr34col72.state = 'pertk62'
                    textstr34col73.state = 'pertk63'
                    textstr34col74.state = 'pertk64'
                    textstr34col75.state = 'pertk65'
                    textstr34col81.state = 'pertk71'
                    textstr34col82.state = 'pertk72'
                    textstr34col83.state = 'pertk73'
                    textstr34col84.state = 'pertk74'
                    textstr34col85.state = 'pertk75'
                    textstr34col91.state = 'pertk81'
                    textstr34col92.state = 'pertk82'
                    textstr34col93.state = 'pertk83'
                    textstr34col94.state = 'pertk84'
                    textstr34col95.state = 'pertk85'

                    textstr35col21.state = 'izn11'
                    textstr35col22.state = 'izn12'
                    textstr35col31.state = 'izn21'
                    textstr35col32.state = 'izn22'
                    textstr35col41.state = 'izn31'
                    textstr35col42.state = 'izn32'
                    textstr35col51.state = 'izn41'
                    textstr35col52.state = 'izn42'
                    textstr35col61.state = 'izn51'
                    textstr35col62.state = 'izn52'
                    textstr35col71.state = 'izn61'
                    textstr35col72.state = 'izn62'
                    textstr35col81.state = 'izn71'
                    textstr35col82.state = 'izn72'
                    textstr35col91.state = 'izn81'
                    textstr35col92.state = 'izn82'

                    textstr36col21.state = 'rtk11'
                    textstr36col22.state = 'rtk12'
                    textstr36col23.state = 'rtk13'
                    textstr36col24.state = 'rtk14'
                    textstr36col25.state = 'rtk15'
                    textstr36col31.state = 'rtk21'
                    textstr36col32.state = 'rtk22'
                    textstr36col33.state = 'rtk23'
                    textstr36col34.state = 'rtk24'
                    textstr36col35.state = 'rtk25'
                    textstr36col41.state = 'rtk31'
                    textstr36col42.state = 'rtk32'
                    textstr36col43.state = 'rtk33'
                    textstr36col44.state = 'rtk34'
                    textstr36col45.state = 'rtk35'
                    textstr36col51.state = 'rtk41'
                    textstr36col52.state = 'rtk42'
                    textstr36col53.state = 'rtk43'
                    textstr36col54.state = 'rtk44'
                    textstr36col55.state = 'rtk45'
                    textstr36col61.state = 'rtk51'
                    textstr36col62.state = 'rtk52'
                    textstr36col63.state = 'rtk53'
                    textstr36col64.state = 'rtk54'
                    textstr36col65.state = 'rtk55'
                    textstr36col71.state = 'rtk61'
                    textstr36col72.state = 'rtk62'
                    textstr36col73.state = 'rtk63'
                    textstr36col74.state = 'rtk64'
                    textstr36col75.state = 'rtk65'
                    textstr36col81.state = 'rtk71'
                    textstr36col82.state = 'rtk72'
                    textstr36col83.state = 'rtk73'
                    textstr36col84.state = 'rtk74'
                    textstr36col85.state = 'rtk75'
                    textstr36col91.state = 'rtk81'
                    textstr36col92.state = 'rtk82'
                    textstr36col93.state = 'rtk83'
                    textstr36col94.state = 'rtk84'
                    textstr36col95.state = 'rtk85'

                    textstr37col21.state = 'g11'
                    textstr37col22.state = 'g12'
}
                Text {
                    id: textraschet
                    text: "Расчет"
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.verticalCenter: parent.verticalCenter
                    font.bold: true
                    font.pixelSize: 16
                    color: "white"
                }
            }
        }
            RowLayout {
                id: row3dop
                anchors.top: row3.bottom
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfchastota.height+5
                anchors.bottomMargin: 5
                Text {
                    id: chastota
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    //font.bold: true
                    font.pixelSize: 16
                    color: "blue"
                    text: "Введите искомую частоту, Гц:"
                }
                TextField {
                    id: tfchastota
                    anchors.left: chastota.right
                    anchors.leftMargin: 5 + oborotka.width - chastota.width
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 100
                    //x: oborotka.x//tfoborotka.x
                }
                Text {
                    id: chastotaplus
                    anchors.left: tfchastota.right
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    //font.bold: true
                    font.pixelSize: 16
                    color: "blue"
                    text: "±"
                }
                TextField {
                    id: tfchastotaplus
                    anchors.left: chastotaplus.right
                    anchors.leftMargin: 5// + oborotka.width - chastota.width
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 50
                    //x: oborotka.x//tfoborotka.x
                }
                Button {
                    id: butpoiskchastota
                    anchors.left: /*butraschet.left*/tfchastotaplus.right
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    highlighted: true
                    Material.accent: Material.LightBlue
                    onClicked: {
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col2.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col2.text)))) {str2col2.state='state22'} else {str2col2.state='state220'}
                        //if (Number(parseFloat(plus))>=Number(parseFloat(textstr2col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col3.text))) {str2col3.state='state23'} else {str2col3.state='state230'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col4.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col4.text)))) {str2col4.state='state24'} else {str2col4.state='state240'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col5.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col5.text)))) {str2col5.state='state25'} else {str2col5.state='state250'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col6.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col6.text)))) {str2col6.state='state26'} else {str2col6.state='state260'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col7.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col7.text)))) {str2col7.state='state27'} else {str2col7.state='state270'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col8.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col8.text)))) {str2col8.state='state28'} else {str2col8.state='state280'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr2col9.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr2col9.text)))) {str2col9.state='state29'} else {str2col9.state='state290'}
                        //if (Number(parseFloat(tfchastota.text))+Number(parseFloat(xxx))>=Number(parseFloat(textstr3col2.text)) & (Number(parseFloat(tfchastota.text))-Number(parseFloat(xxx))<=Number(parseFloat(textstr3col2.text)))) {str3col2.state='state32'} else {str3col2.state='state320'}


                    }

                    Text {
                        id: textpoiskchastota
                        text: "Поиск"
                        anchors.horizontalCenter: parent.horizontalCenter
                        anchors.verticalCenter: parent.verticalCenter
                        font.bold: true
                        font.pixelSize: 16
                        color: "white"
                    }
                }
                Switch {
                    id: swt
                    //anchors.left: butpoiskchastota.right
                    anchors.right: parent.right
                    anchors.rightMargin: 5
                    //anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    //highlighted: true
                    checked: false
                    //highlighted: true
                    Material.accent: Material.LightBlue
                    text: "<font color=\"blue\">Показать все / Показать искомое</font>"//"Показать/Скрыть"
                    //color.text: "blue"
                    onClicked: {
                    rec.height =+ hei
                    flick.contentHeight =+ heiflick
                               }
                }
            }

            RowLayout {
                id: row4
                z: 1
                anchors.top: row3dop.bottom
                anchors.topMargin: 5
                anchors.left: parent.left
                anchors.leftMargin: 5
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: str1col1.height
                Rectangle {
                    id: str1col1
                    anchors.top: parent.top//table.top
                    anchors.left: parent.left//table.left
                    width: opisanie.width/3//table.width/3
                    //height: 20
                    height: Math.max(rowstr1col1.height, str1col2o.height + str1col2.height)
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col1
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col1
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "Наименование"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col2o
                    anchors.top: parent.top//table.top
                    anchors.left: str1col1.right
                    width: opisanie.width*2/3
                    height: rowstr1col2o.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col2o
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col2o
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "Расчетная частота гармоники или частотный состав"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col2
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col1.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col2.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col2
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col2
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "1"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col3
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col2.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col3.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col3
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col3
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "2"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col4
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col3.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col4.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col4
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col4
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "3"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col5
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col4.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col5.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col5
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col5
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "4"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col6
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col5.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col6.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col6
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col6
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "5"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col7
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col6.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col7.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col7
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col7
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "6"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col8
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col7.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col8.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col8
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col8
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "7"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
                Rectangle {
                    id: str1col9
                    anchors.top: str1col2o.bottom
                    anchors.left: str1col8.right
                    width: rowstr1col2o.width/8
                    height: rowstr1col9.height+5
                    color: "palegreen"
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    RowLayout {
                        id: rowstr1col9
                        anchors.verticalCenter: parent.verticalCenter
                        width: parent.width
                        Label {
                            id: textstr1col9
                            anchors.horizontalCenter: parent.horizontalCenter
                            text: "8"
                            //font.bold: true
                            font.pixelSize: 16
                            wrapMode: Text.WordWrap
                        }
                    }
                }
            }

    }
    Rectangle {
        id: foto
        anchors.top: parent.top
        anchors.topMargin: 0
        anchors.left: opisanie.right
        anchors.leftMargin: 0
        //anchors.right: toolbar.right
        //anchors.rightMargin: 0
        width: parent.width/6
        height: parent.height/4
        //color: "palegreen"
        z: -1
        Image {
            anchors.fill: parent
            source: "file:./Images/podsh.jpg"
            fillMode: Image.PreserveAspectFit
            mipmap: true
            mirror: true
            smooth: true
        }
    }
    Rectangle {
        id: shema
        anchors.top: foto.bottom//toolbar.bottom
        anchors.topMargin: 0
        anchors.left: foto.left
        anchors.leftMargin: 0
        anchors.right: parent.right
        anchors.rightMargin: 0
        height: parent.height/4
        //color: "palegreen"
        z: -1
        Image {
            anchors.fill: parent
            source: "file:./Images/podsh1.jpg"
            fillMode: Image.PreserveAspectFit
        }
    }
    Rectangle {
        id: razm
        anchors.top: shema.bottom
        anchors.topMargin: 0
        anchors.left: opisanie.right
        anchors.leftMargin: 5
        anchors.right: parent.right
        anchors.rightMargin: 5
        height: parent.height/2
        //color: "darkorange"
        z: -1
        Rectangle {
            id: rowvd
            anchors.top: parent.top
            anchors.topMargin: 0
            anchors.left: parent.left
            anchors.leftMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0
            height: rowvd1.height + rowvd2.height
            RowLayout {
                id: rowvd1
                anchors.top: parent.top
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: textvd1.height
                Text {
                    id: textvd1
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 14
                    color: "blue"
                    text: "Внутренний диаметр d, мм:"
                }
            }
            RowLayout {
                id: rowvd2
                anchors.top: rowvd1.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfvd.height + 10
//                Text {
//                    id: textvd2
//                    anchors.left: parent.left
//                    anchors.leftMargin: 5
//                    anchors.verticalCenter: parent.verticalCenter
//                    font.pixelSize: 16
//                    color: "blue"
//                    text: "d="
//                }
                TextField {
                    id: tfvd
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 80
                }
            }
        }
        Rectangle {
            id: rownd
            anchors.top: rowvd.bottom
            anchors.topMargin: 0
            anchors.left: parent.left
            anchors.leftMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0
            height: rownd1.height + rownd2.height
            RowLayout {
                id: rownd1
                anchors.top: parent.top
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: textnd1.height
                Text {
                    id: textnd1
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 14
                    color: "blue"
                    text: "Наружный диаметр D, мм:"
                }
            }
            RowLayout {
                id: rownd2
                anchors.top: rownd1.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfnd.height + 10
//                Text {
//                    id: textnd2
//                    anchors.left: parent.left
//                    anchors.leftMargin: 5
//                    anchors.verticalCenter: parent.verticalCenter
//                    font.pixelSize: 16
//                    color: "blue"
//                    text: "D="
//                }
                TextField {
                    id: tfnd
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 80
                }
            }
        }
        Rectangle {
            id: rowdtk
            anchors.top: rownd.bottom
            anchors.topMargin: 0
            anchors.left: parent.left
            anchors.leftMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0
            height: rowdtk1.height + rowdtk2.height
            RowLayout {
                id: rowdtk1
                anchors.top: parent.top
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: textdtk1.height
                Text {
                    id: textdtk1
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 14
                    color: "blue"
                    text: "Диаметр тел качения dтк, мм:"
                }
            }
            RowLayout {
                id: rowdtk2
                anchors.top: rowdtk1.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfdtk.height + 10
//                Text {
//                    id: textdtk2
//                    anchors.left: parent.left
//                    anchors.leftMargin: 5
//                    anchors.verticalCenter: parent.verticalCenter
//                    font.pixelSize: 16
//                    color: "blue"
//                    text: "dтк="
//                }
                TextField {
                    id: tfdtk
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 80
                }
            }
        }
        Rectangle {
            id: rowztk
            anchors.top: rowdtk.bottom
            anchors.topMargin: 0
            anchors.left: parent.left
            anchors.leftMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0
            height: rowztk1.height + rowztk2.height
            RowLayout {
                id: rowztk1
                anchors.top: parent.top
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: textztk1.height
                Text {
                    id: textztk1
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 14
                    color: "blue"
                    text: "Количество тел качения zтк, шт:"
                }
            }
            RowLayout {
                id: rowztk2
                anchors.top: rowztk1.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfztk.height + 10
//                Text {
//                    id: textztk2
//                    anchors.left: parent.left
//                    anchors.leftMargin: 5
//                    anchors.verticalCenter: parent.verticalCenter
//                    font.pixelSize: 16
//                    color: "blue"
//                    text: "zтк="
//                }
                TextField {
                    id: tfztk
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 80
                }
            }
        }
        Rectangle {
            id: rowugol
            anchors.top: rowztk.bottom
            anchors.topMargin: 0
            anchors.left: parent.left
            anchors.leftMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0
            height: rowugol1.height + rowugol2.height
            RowLayout {
                id: rowugol1
                anchors.top: parent.top
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: textugol1.height
                Text {
                    id: textugol1
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 14
                    color: "blue"
                    text: "Угол контакта α, °:"
                }
            }
            RowLayout {
                id: rowugol2
                anchors.top: rowugol1.bottom
                anchors.topMargin: 0
                anchors.left: parent.left
                anchors.leftMargin: 0
                anchors.right: parent.right
                anchors.rightMargin: 0
                height: tfugol.height + 10
//                Text {
//                    id: textugol2
//                    anchors.left: parent.left
//                    anchors.leftMargin: 5
//                    anchors.verticalCenter: parent.verticalCenter
//                    font.pixelSize: 16
//                    color: "blue"
//                    text: "α="
//                }
                TextField {
                    id: tfugol
                    anchors.left: parent.left
                    anchors.leftMargin: 5
                    anchors.verticalCenter: parent.verticalCenter
                    font.pixelSize: 16
                    implicitWidth: 80
                }
            }
        }
    }
    Rectangle {
        id: table
        anchors.top: opisanie.bottom
        anchors.topMargin: 5
        anchors.left: parent.left
        anchors.leftMargin: 5
        width: opisanie.width
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 5
        //color: "yellow"

        Flickable {
            id: flick
            anchors.top: parent.top//str1col1.bottom
            anchors.left: parent.left
            anchors.right: parent.right
            //height: 100
            //anchors.bottom: parent.bottom
            height: parent.height//rec.height//(str1col1.height + str2col1.height + str3col1.height + str4col1.height + str5col1.height + str6col1.height)*5//window.height - opisanie.height*2
            clip: true
            contentHeight: heiflick//str2col1.height+str3col1.height+str4col1.height+str5col1.height+str6col1.height+str7col1.height+str8col1.height+str9col1.height+str10col1.height+str11col1.height+str12col1.height+str13col1.height+str14col1.height+str15col1.height+str16col1.height+str17col1.height+str18col1.height+str19col1.height+str20col1.height+str21col1.height+str22col1.height+str23col1.height+str24col1.height+str25col1.height+str26col1.height+str27col1.height+str28col1.height+str29col1.height+str30col1.height+str31col1.height+str32col1.height+str33col1.height+str34col1.height+str35col1.height+str36col1.height+str37col1.height
            contentWidth: parent.width
            ScrollBar.vertical: ScrollBar { id: vbar;
                                        hoverEnabled: true
                                        active: hovered || pressed
                                        orientation: Qt.Vertical
                                        //size: frame.height / content.height
                                        anchors.top: parent.top
                                        anchors.right: parent.right
                                        anchors.bottom: parent.bottom
                                        width: 5
                            }// active: hbar.active }
                            ScrollBar {
                                    id: hbar
                                    hoverEnabled: true
                                    active: hovered || pressed
                                    orientation: Qt.Horizontal
                                    //size: frame.width / content.width
                                    anchors.left: parent.left
                                    anchors.right: parent.right
                                    anchors.bottom: parent.bottom
                                }
                            Rectangle {
                                id: rec
//anchors.fill: parent
                                anchors.top: parent.top
                                anchors.left: parent.left
                                anchors.right: parent.right
                                height: hei//str1col1.height+str2col1.height+str3col1.height+str4col1.height+str5col1.height+str6col1.height+str7col1.height+str8col1.height+str9col1.height+str10col1.height+str11col1.height+str12col1.height+str13col1.height+str14col1.height+str15col1.height+str16col1.height+str17col1.height+str18col1.height+str19col1.height+str20col1.height+str21col1.height+str22col1.height+str23col1.height+str24col1.height+str25col1.height+str26col1.height+str27col1.height+str28col1.height+str29col1.height+str30col1.height+str31col1.height+str32col1.height+str33col1.height+str34col1.height+str35col1.height+str36col1.height+str37col1.height
clip: true


        Rectangle {
            id: str2col1
            anchors.top: parent.top//str1col1.bottom
            anchors.left: parent.left
            //anchors.right: str1col1.right
            width: parent.width/3
            //height: 20
            height: rowstr2col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                anchors.fill: parent
                cursorShape: Qt.WhatsThisCursor
                onClicked: {
                    mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                    mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                    mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                    mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                    mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                    mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                    mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                    mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                    mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                    mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                    mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                    mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                    str2inf.height = textstr2inf.height+10
                    str2inf.visible = "true"
                    textstr2inf.color = "#353637"
                    rec.height =+ hei
                    flick.contentHeight =+ heiflick
                    }
            }
            states: [
                State {
                    name: "state21"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr2col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col9.text)))
                    }
                    PropertyChanges {
                        target: str2col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str2col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr2col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота вращения сепаратора (FTF)"
                    //font.bold: true
                    padding: 2
                    width: parent.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str2inf
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.top: str2col1.bottom
            height: 0//textstr2inf.height+10
            visible: false
            border.width: 1
            border.color: "white"
            radius: 10
            color: "paleturquoise"
            Text {
                visible: str2inf.visible
                anchors.top: parent.top
                anchors.right: parent.right
                anchors.rightMargin: 10
                font.pixelSize: 16
                text: "X"
                MouseArea {
                    id: mouse2
                    anchors.fill: parent
                    onClicked: {
                        str2inf.visible = "false"
                        textstr2inf.color = "white"
                        rec.height =+ hei - str2inf.height
                        flick.contentHeight =+ heiflick - str2inf.height
                        str2inf.height = 0
                    }
                }
            }
            Text {
                id: textstr2inf
                anchors.top: parent.top
                //anchors.topMargin: 5
                anchors.leftMargin: 5
                anchors.rightMargin: 5
                anchors.bottomMargin: 5
                anchors.left: parent.left
                anchors.right: parent.right
                font.pixelSize: 16
                wrapMode: Text.WordWrap
                text: "<br>Частота вращения сепаратора (FTF):</b>"+
                      "<br><b>fc=1/2·f1·(1-dтк/Dс·cosα)</b>"+
                      "<br>f1 - частота вращения ротора, Гц;</b>"+
                      "<br>dтк - диаметр тел качения, мм;</b>"+
                      "<br>α - угол контакта, °;</b>"+
                      "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                      "<br><b>Dс=(D+d)/2</b>"+
                      "<br>D - диаметр наружного кольца подшипника, мм;</b>"+
                      "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"+
                      "<br>Существуют упрощенные формулы расчета:</b>"+
                      "<br><b>fс=0,4·f1</b>"+
                      "<br><b>fс=f1·(1/2-1,2/z)</b>"+
                      "<br>z - количество тел качения, шт.</b>"
            }
        }

        Rectangle {
            id: str2col2
            anchors.top: str2col1.top
            anchors.left: str2col1.right
            width: parent.width*2/24
            //anchors.right: str1col2.right
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state22"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col2.text)))
                    PropertyChanges {
                        target: str2col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col2
                            text: parseFloat(sep1).toFixed(2)//.replace(".",",")
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col3
            anchors.top: str2col1.top
            anchors.left: str2col2.right
            width: parent.width*2/24
            //anchors.right: str1col3.right
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state23"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col3.text)))
                    PropertyChanges {
                        target: str2col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col3
                            text: parseFloat(sep1*2).toFixed(2)//.replace(".",",")
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col4
            anchors.top: str2col1.top
            anchors.left: str2col3.right
            //anchors.right: str1col4.right
            width: parent.width*2/24
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state24"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col4.text)))
                    PropertyChanges {
                        target: str2col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col4
                            text: parseFloat(sep1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col5
            anchors.top: str2col1.top
            anchors.left: str2col4.right
            width: parent.width*2/24
            //anchors.right: str1col5.right
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state25"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col5.text)))
                    PropertyChanges {
                        target: str2col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col5
                            text: parseFloat(sep1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col6
            anchors.top: str2col1.top
            anchors.left: str2col5.right
            width: parent.width*2/24
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state26"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col6.text)))
                    PropertyChanges {
                        target: str2col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col6
                            text: parseFloat(sep1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col7
            anchors.top: str2col1.top
            anchors.left: str2col6.right
            width: parent.width*2/24
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state27"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col7.text)))
                    PropertyChanges {
                        target: str2col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col7
                            text: parseFloat(sep1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col8
            anchors.top: str2col1.top
            anchors.left: str2col7.right
            width: parent.width*2/24
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state28"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col8.text)))
                    PropertyChanges {
                        target: str2col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col8
                            text: parseFloat(sep1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str2col9
            anchors.top: str2col1.top
            anchors.left: str2col8.right
            width: parent.width*2/24
            height: str2col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state29"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr2col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr2col9.text)))
                    PropertyChanges {
                        target: str2col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr2col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr2col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sep8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr2col9
                            text: parseFloat(sep1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str3col1
            anchors.top: str2inf.bottom//str2col1.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr3col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                anchors.fill: parent
                cursorShape: Qt.WhatsThisCursor
                onClicked: {
                    mouse2.clicked(mouse2);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                    mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                    mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                    mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                    mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                    mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                    mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                    mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                    mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                    mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                    mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                    mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                    str3inf.height = textstr3inf.height+10
                    str3inf.visible = "true"
                    textstr3inf.color = "#353637"
                    rec.height =+ hei
                    flick.contentHeight =+ heiflick
                    }
            }
            states: [
                State {
                    name: "state31"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr3col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col9.text)))
                    }
                    PropertyChanges {
                        target: str3col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str3col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr3col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота прохождения тел качения по внутреннему кольцу (BPFI)"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str3inf
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.top: str3col1.bottom
            height: 0//textstr2inf.height+10
            visible: false
            border.width: 1
            border.color: "white"
            radius: 10
            color: "paleturquoise"
            Text {
                visible: str3inf.visible
                anchors.top: parent.top
                anchors.right: parent.right
                anchors.rightMargin: 10
                font.pixelSize: 16
                text: "X"
                MouseArea {
                    id: mouse3
                    anchors.fill: parent
                    onClicked: {
                        str3inf.visible = "false"
                        textstr3inf.color = "white"
                        rec.height =+ hei - str3inf.height
                        flick.contentHeight =+ heiflick - str3inf.height
                        str3inf.height = 0
                    }
                }
            }
            Text {
                id: textstr3inf
                anchors.top: parent.top
                //anchors.topMargin: 5
                anchors.leftMargin: 5
                anchors.rightMargin: 5
                anchors.bottomMargin: 5
                anchors.left: parent.left
                anchors.right: parent.right
                font.pixelSize: 16
                wrapMode: Text.WordWrap
                text: "<br>Частота прохождения тел качения по внутреннему кольцу (FTF):</b>"+
                      "<br><b>fвн=1/2·f1·z·(1+dтк/Dс·cosα)</b>"+
                      "<br>f1 - частота вращения ротора, Гц;</b>"+
                      "<br>z - количество тел качения, шт;</b>"+
                      "<br>dтк - диаметр тел качения, мм;</b>"+
                      "<br>α - угол контакта, °;</b>"+
                      "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                      "<br><b>Dс=(D+d)/2</b>"+
                      "<br>D - диаметр наружного кольца подшипника, мм;</b>"+
                      "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"+
                      "<br>Существуют упрощенные формулы расчета:</b>"+
                      "<br><b>fвн=0,6·z·f1</b>"+
                      "<br><b>fвн=f1·(z/2+1,2)</b>"
            }
        }

        Rectangle {
            id: str3col2
            anchors.top: str3col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10

            states: [
                State {
                    name: "state32"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col2.text)))
                    PropertyChanges {
                        target: str3col2
                        color: "tomato"
                    }
                }
            ]

            RowLayout {
                id: rowstr3col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col2
                            text: parseFloat(vn1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col3
            anchors.top: str3col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state33"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col3.text)))
                    PropertyChanges {
                        target: str3col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col3
                            text: parseFloat(vn1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col4
            anchors.top: str3col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state34"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col4.text)))
                    PropertyChanges {
                        target: str3col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col4
                            text: parseFloat(vn1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col5
            anchors.top: str3col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state35"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col5.text)))
                    PropertyChanges {
                        target: str3col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col5
                            text: parseFloat(vn1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col6
            anchors.top: str3col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state36"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col6.text)))
                    PropertyChanges {
                        target: str3col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col6
                            text: parseFloat(vn1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col7
            anchors.top: str3col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state37"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col7.text)))
                    PropertyChanges {
                        target: str3col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col7
                            text: parseFloat(vn1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col8
            anchors.top: str3col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state38"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col8.text)))
                    PropertyChanges {
                        target: str3col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col8
                            text: parseFloat(vn1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str3col9
            anchors.top: str3col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str3col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state39"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr3col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr3col9.text)))
                    PropertyChanges {
                        target: str3col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr3col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr3col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "vn8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr3col9
                            text: parseFloat(vn1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str4col1
            anchors.top: str3inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr4col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse2.clicked(mouse2);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str4inf.height = textstr2inf.height+10
                                str4inf.visible = "true"
                                textstr4inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state41"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr4col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col9.text)))
                    }
                    PropertyChanges {
                        target: str4col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str4col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr4col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота прохождения тел качения по наружному кольцу (BPFO)"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str4inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str4col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str4inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse4
                            anchors.fill: parent
                            onClicked: {
                                str4inf.visible = "false"
                                textstr4inf.color = "white"
                                rec.height =+ hei - str4inf.height
                                flick.contentHeight =+ heiflick - str4inf.height
                                str4inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr4inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота прохождения тел качения по наружному кольцу (BPFO):</b>"+
                              "<br><b>fнар=1/2·f1·z·(1-dтк/Dс·cosα)</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>z - количество тел качения, шт.</b>"+
                              "<br>dтк - диаметр тел качения, мм;</b>"+
                              "<br>α - угол контакта, °;</b>"+
                              "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                              "<br><b>Dс=(D+d)/2</b>"+
                              "<br>D - диаметр наружного кольца подшипника, мм:</b>"+
                              "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"+
                              "<br>Существуют упрощенные формулы расчета:</b>"+
                              "<br><b>fнар=0,4·z·f1</b>"+
                              "<br><b>fнар=f1·(z/2-1,2)</b>"
                    }
                }

        Rectangle {
            id: str4col2
            anchors.top: str4col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state42"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col2.text)))
                    PropertyChanges {
                        target: str4col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col2
                            text: parseFloat(nar1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col3
            anchors.top: str4col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state43"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col3.text)))
                    PropertyChanges {
                        target: str4col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col3
                            text: parseFloat(nar1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col4
            anchors.top: str4col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state44"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col4.text)))
                    PropertyChanges {
                        target: str4col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col4
                            text: parseFloat(nar1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col5
            anchors.top: str4col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state45"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col5.text)))
                    PropertyChanges {
                        target: str4col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col5
                            text: parseFloat(nar1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col6
            anchors.top: str4col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state46"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col6.text)))
                    PropertyChanges {
                        target: str4col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col6
                            text: parseFloat(nar1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col7
            anchors.top: str4col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state47"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col7.text)))
                    PropertyChanges {
                        target: str4col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col7
                            text: parseFloat(nar1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col8
            anchors.top: str4col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state48"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col8.text)))
                    PropertyChanges {
                        target: str4col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col8
                            text: parseFloat(nar1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str4col9
            anchors.top: str4col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str4col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state49"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr4col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr4col9.text)))
                    PropertyChanges {
                        target: str4col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr4col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr4col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nar8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr4col9
                            text: parseFloat(nar1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str5col1
            anchors.top: str4inf.bottom//str4col1.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr5col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse2.clicked(mouse2);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str5inf.height = textstr2inf.height+10
                                str5inf.visible = "true"
                                textstr5inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state51"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr5col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col9.text)))
                    }
                    PropertyChanges {
                        target: str5col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str5col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr5col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота возбуждения при изменении формы дорожки внутреннего кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str5inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str5col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str5inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse5
                            anchors.fill: parent
                            onClicked: {
                                str5inf.visible = "false"
                                textstr5inf.color = "white"
                                rec.height =+ hei - str5inf.height
                                flick.contentHeight =+ heiflick - str5inf.height
                                str5inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr5inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота возбуждения при изменении формы дорожки внутреннего кольца:</b>"+
                              "<br><b>fвн=1/2·f1·z·(1+dтк/Dс·cosα)</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>z - количество тел качения, шт;</b>"+
                              "<br>dтк - диаметр тел качения, мм;</b>"+
                              "<br>α - угол контакта, °;</b>"+
                              "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                              "<br><b>Dс=(D+d)/2</b>"+
                              "<br>D - диаметр наружного кольца подшипника, мм;</b>"+
                              "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"+
                              "<br>Существуют упрощенные формулы расчета:</b>"+
                              "<br><b>fвн=0,6·z·f1</b>"+
                              "<br><b>fвн=f1·(z/2+1,2)</b>"
                    }
                }

        Rectangle {
            id: str5col2
            anchors.top: str5col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state52"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col2.text)))
                    PropertyChanges {
                        target: str5col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col2
                            text: parseFloat(fvn1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col3
            anchors.top: str5col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state53"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col3.text)))
                    PropertyChanges {
                        target: str5col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col3
                            text: parseFloat(fvn1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col4
            anchors.top: str5col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state54"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col4.text)))
                    PropertyChanges {
                        target: str5col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col4
                            text: parseFloat(fvn1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col5
            anchors.top: str5col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state55"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col5.text)))
                    PropertyChanges {
                        target: str5col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col5
                            text: parseFloat(fvn1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col6
            anchors.top: str5col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state56"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col6.text)))
                    PropertyChanges {
                        target: str5col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col6
                            text: parseFloat(fvn1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col7
            anchors.top: str5col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state57"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col7.text)))
                    PropertyChanges {
                        target: str5col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col7
                            text: parseFloat(fvn1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col8
            anchors.top: str5col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state58"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col8.text)))
                    PropertyChanges {
                        target: str5col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col8
                            text: parseFloat(fvn1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str5col9
            anchors.top: str5col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str5col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state59"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr5col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr5col9.text)))
                    PropertyChanges {
                        target: str5col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr5col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr5col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fvn8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr5col9
                            text: parseFloat(fvn1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str6col1
            anchors.top: str5inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr6col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse2.clicked(mouse2);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str6inf.height = textstr6inf.height+10
                                str6inf.visible = "true"
                                textstr6inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state61"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr6col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col9.text)))
                    }
                    PropertyChanges {
                        target: str6col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str6col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr6col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота возбуждения при изменении формы дорожки наружного кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str6inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str6col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str6inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse6
                            anchors.fill: parent
                            onClicked: {
                                str6inf.visible = "false"
                                textstr6inf.color = "white"
                                rec.height =+ hei - str6inf.height
                                flick.contentHeight =+ heiflick - str6inf.height
                                str6inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr6inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота возбуждения при изменении формы дорожки наружного кольца:</b>"+
                              "<br><b>fнар=1/2·f1·z·(1-dтк/Dс·cosα)</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>z - количество тел качения, шт.</b>"+
                              "<br>dтк - диаметр тел качения, мм;</b>"+
                              "<br>α - угол контакта, °;</b>"+
                              "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                              "<br><b>Dс=(D+d)/2</b>"+
                              "<br>D - диаметр наружного кольца подшипника, мм:</b>"+
                              "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"+
                              "<br>Существуют упрощенные формулы расчета:</b>"+
                              "<br><b>fнар=0,4·z·f1</b>"+
                              "<br><b>fнар=f1·(z/2-1,2)</b>"
                    }
                }

        Rectangle {
            id: str6col2
            anchors.top: str6col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state62"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col2.text)))
                    PropertyChanges {
                        target: str6col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col2
                            text: parseFloat(fnar1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col3
            anchors.top: str6col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state63"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col3.text)))
                    PropertyChanges {
                        target: str6col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col3
                            text: parseFloat(fnar1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col4
            anchors.top: str6col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state64"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col4.text)))
                    PropertyChanges {
                        target: str6col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col4
                            text: parseFloat(fnar1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col5
            anchors.top: str6col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state65"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col5.text)))
                    PropertyChanges {
                        target: str6col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col5
                            text: parseFloat(fnar1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col6
            anchors.top: str6col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state66"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col6.text)))
                    PropertyChanges {
                        target: str6col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col6
                            text: parseFloat(fnar1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col7
            anchors.top: str6col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state67"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col7.text)))
                    PropertyChanges {
                        target: str6col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col7
                            text: parseFloat(fnar1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col8
            anchors.top: str6col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state68"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col8.text)))
                    PropertyChanges {
                        target: str6col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col8
                            text: parseFloat(fnar1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str6col9
            anchors.top: str6col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str6col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state69"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr6col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr6col9.text)))
                    PropertyChanges {
                        target: str6col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr6col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr6col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "fnar8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr6col9
                            text: parseFloat(fnar1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str7col1
            anchors.top: str6inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr7col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse2.clicked(mouse2);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str7inf.height = textstr7inf.height+10
                                str7inf.visible = "true"
                                textstr7inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state71"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr7col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col9.text)))
                    }
                    PropertyChanges {
                        target: str7col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str7col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr7col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота вращения тела качения (BSF)"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str7inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str7col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str7inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse7
                            anchors.fill: parent
                            onClicked: {
                                str7inf.visible = "false"
                                textstr7inf.color = "white"
                                rec.height =+ hei - str7inf.height
                                flick.contentHeight =+ heiflick - str7inf.height
                                str7inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr7inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота вращения тела качения (BSF):</b>"+
                              "<br><b>fтк=1/2·f1·Dc/dтк·(1-(dтк/Dс·cosα)²)</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>dтк - диаметр тел качения, мм;</b>"+
                              "<br>α - угол контакта, °;</b>"+
                              "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                              "<br><b>Dс=(D+d)/2</b>"+
                              "<br>D - диаметр наружного кольца подшипника, мм:</b>"+
                              "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"+
                              "<br>Существует упрощенная формула расчета:</b>"+
                              "<br><b>fтк=(0,18...0,23)·z·f1</b>"+
                              "<br>z - количество тел качения, шт;</b>"+
                              "<br>0,18 при z больше 10;</b>"+
                              "<br>0,23 при z меньше 10.</b>"
                              //"<br>0,23 при z<10 rere</b>"
                    }
                }

        Rectangle {
            id: str7col2
            anchors.top: str7col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state72"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col2.text)))
                    PropertyChanges {
                        target: str7col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col2
                            text: parseFloat(tk1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col3
            anchors.top: str7col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state73"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col3.text)))
                    PropertyChanges {
                        target: str7col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col3
                            text: parseFloat(tk1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col4
            anchors.top: str7col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state74"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col4.text)))
                    PropertyChanges {
                        target: str7col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col4
                            text: parseFloat(tk1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col5
            anchors.top: str7col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state75"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col5.text)))
                    PropertyChanges {
                        target: str7col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col5
                            text: parseFloat(tk1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col6
            anchors.top: str7col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state76"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col6.text)))
                    PropertyChanges {
                        target: str7col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col6
                            text: parseFloat(tk1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col7
            anchors.top: str7col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state77"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col7.text)))
                    PropertyChanges {
                        target: str7col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col7
                            text: parseFloat(tk1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col8
            anchors.top: str7col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state78"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col8.text)))
                    PropertyChanges {
                        target: str7col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col8
                            text: parseFloat(tk1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str7col9
            anchors.top: str7col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str7col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state79"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr7col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr7col9.text)))
                    PropertyChanges {
                        target: str7col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr7col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr7col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tk8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr7col9
                            text: parseFloat(tk1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str8col1
            anchors.top: str7inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr8col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse2.clicked(mouse2);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str8inf.height = textstr8inf.height+10
                                str8inf.visible = "true"
                                textstr8inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state81"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr8col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col9.text)))
                    }
                    PropertyChanges {
                        target: str8col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str8col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr8col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Частота возбуждения при дефекте формы тел качения"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str8inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str8col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str8inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse8
                            anchors.fill: parent
                            onClicked: {
                                str8inf.visible = "false"
                                textstr8inf.color = "white"
                                rec.height =+ hei - str8inf.height
                                flick.contentHeight =+ heiflick - str8inf.height
                                str8inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr8inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота возбуждения при дефекте формы тел качения:</b>"+
                              "<br><b>fфтк=2·f1·(Dc²/dтк²-1)</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>dтк - диаметр тел качения, мм;</b>"+
                              "<br>Dс - диаметр делительной окружности подшипника, мм:</b>"+
                              "<br><b>Dс=(D+d)/2</b>"+
                              "<br>D - диаметр наружного кольца подшипника, мм:</b>"+
                              "<br>d - диаметр внутреннего кольца подшипника, мм.</b>"
                    }
                }

        Rectangle {
            id: str8col2
            anchors.top: str8col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state82"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col2.text)))
                    PropertyChanges {
                        target: str8col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col2
                            text: parseFloat(ftk1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col3
            anchors.top: str8col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state83"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col3.text)))
                    PropertyChanges {
                        target: str8col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col3
                            text: parseFloat(ftk1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col4
            anchors.top: str8col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state84"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col4.text)))
                    PropertyChanges {
                        target: str8col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col4
                            text: parseFloat(ftk1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col5
            anchors.top: str8col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state85"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col5.text)))
                    PropertyChanges {
                        target: str8col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col5
                            text: parseFloat(ftk1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col6
            anchors.top: str8col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state86"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col6.text)))
                    PropertyChanges {
                        target: str8col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col6
                            text: parseFloat(ftk1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col7
            anchors.top: str8col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state87"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col7.text)))
                    PropertyChanges {
                        target: str8col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col7
                            text: parseFloat(ftk1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col8
            anchors.top: str8col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state88"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col8.text)))
                    PropertyChanges {
                        target: str8col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col8
                            text: parseFloat(ftk1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str8col9
            anchors.top: str8col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str8col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state89"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr8col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr8col9.text)))
                    PropertyChanges {
                        target: str8col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr8col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr8col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "ftk8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr8col9
                            text: parseFloat(ftk1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }

        Rectangle {
            id: str9col1
            anchors.top: str8inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr9col1.height+5
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse2.clicked(mouse2);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str9inf.height = textstr9inf.height+10
                                str9inf.visible = "true"
                                textstr9inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state91"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr9col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col9.text)))
                    }
                    PropertyChanges {
                        target: str9col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str9col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr9col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Резонансная частота тел качения (для стали ШХ15 и ее аналогов при T=20°C)"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str9inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str9col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str9inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse9
                            anchors.fill: parent
                            onClicked: {
                                str9inf.visible = "false"
                                textstr9inf.color = "white"
                                rec.height =+ hei - str9inf.height
                                flick.contentHeight =+ heiflick - str9inf.height
                                str9inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr9inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Резонансная частота тел качения:</b>"+
                              "<br><b>fртк=0,848·Е/(2·dтк·ρ)</b>"+
                              "<br>Е - модуль упругости;</b>"+
                              "<br>dтк - диаметр тел качения, мм;</b>"+
                              "<br>ρ - удельная плотность шариков.</b>"
                    }
                }

        Rectangle {
            id: str9col2
            anchors.top: str9col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state92"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col2.text)))
                    PropertyChanges {
                        target: str9col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "reztk1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr9col2
                            text: parseFloat(reztk1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str9col3
            anchors.top: str9col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state93"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col3.text)))
                    PropertyChanges {
                        target: str9col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str9col4
            anchors.top: str9col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state94"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col4.text)))
                    PropertyChanges {
                        target: str9col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str9col5
            anchors.top: str9col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state95"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col5.text)))
                    PropertyChanges {
                        target: str9col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str9col6
            anchors.top: str9col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state96"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col6.text)))
                    PropertyChanges {
                        target: str9col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str9col7
            anchors.top: str9col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state97"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col7.text)))
                    PropertyChanges {
                        target: str9col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str9col8
            anchors.top: str9col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state98"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col8.text)))
                    PropertyChanges {
                        target: str9col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str9col9
            anchors.top: str9col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str9col1.height
            color: "palegreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state99"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr9col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr9col9.text)))
                    PropertyChanges {
                        target: str9col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr9col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr9col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str10col1
            anchors.top: str9inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr10col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse2.clicked(mouse2);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str10inf.height = textstr10inf.height+10
                                str10inf.visible = "true"
                                textstr10inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state101"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr10col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col9.text)))
                    }
                    PropertyChanges {
                        target: str10col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str10col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr10col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Неуравновешенность, разностенность, перекос вращающегося кольца относительно неподвижного, несоосность вала и вращающегося кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str10inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str10col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str10inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse10
                            anchors.fill: parent
                            onClicked: {
                                str10inf.visible = "false"
                                textstr10inf.color = "white"
                                rec.height =+ hei - str10inf.height
                                flick.contentHeight =+ heiflick - str10inf.height
                                str10inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr10inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Вибрация, вызываемая данными дефектами, проявляется на оборотной частоте f1 и ее гармониках k·f1, ее трудно отличить от других дефектов на этих частотах</b>"
                    }
                }

        Rectangle {
            id: str10col2
            anchors.top: str10col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state102"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col2.text)))
                    PropertyChanges {
                        target: str10col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "f1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr10col2
                            text: parseFloat(f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str10col3
            anchors.top: str10col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state103"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col3.text)))
                    PropertyChanges {
                        target: str10col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "f11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr10col3
                            text: parseFloat(2*f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str10col4
            anchors.top: str10col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state104"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col4.text)))
                    PropertyChanges {
                        target: str10col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "f12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr10col4
                            text: parseFloat(3*f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str10col5
            anchors.top: str10col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state105"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col5.text)))
                    PropertyChanges {
                        target: str10col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str10col6
            anchors.top: str10col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state106"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col6.text)))
                    PropertyChanges {
                        target: str10col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str10col7
            anchors.top: str10col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state107"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col7.text)))
                    PropertyChanges {
                        target: str10col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str10col8
            anchors.top: str10col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state108"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col8.text)))
                    PropertyChanges {
                        target: str10col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str10col9
            anchors.top: str10col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str10col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state109"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr10col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr10col9.text)))
                    PropertyChanges {
                        target: str10col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr10col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr10col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col1
            anchors.top: str10inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr11col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse2.clicked(mouse2);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str11inf.height = textstr11inf.height+10
                                str11inf.visible = "true"
                                textstr11inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state111"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr11col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col9.text)))
                    }
                    PropertyChanges {
                        target: str11col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str11col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr11col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Отклонение формы сепаратора"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str11inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str11col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str11inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse11
                            anchors.fill: parent
                            onClicked: {
                                str11inf.visible = "false"
                                textstr11inf.color = "white"
                                rec.height =+ hei - str11inf.height
                                flick.contentHeight =+ heiflick - str11inf.height
                                str11inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr11inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота отклонения формы сепаратора подшипника качения вычисляется по формуле:</b>"+
                              "<br><b>fcо=f1/2</b>"+
                              "<br>f1 - частота вращения ротора, Гц.</b>"
                    }
                }

        Rectangle {
            id: str11col2
            anchors.top: str11col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state112"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col2.text)))
                    PropertyChanges {
                        target: str11col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "sepotklon"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr11col2
                            text: parseFloat(sepotklon).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str11col3
            anchors.top: str11col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state113"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col3.text)))
                    PropertyChanges {
                        target: str11col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col4
            anchors.top: str11col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state114"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col4.text)))
                    PropertyChanges {
                        target: str11col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col5
            anchors.top: str11col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state115"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col5.text)))
                    PropertyChanges {
                        target: str11col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col6
            anchors.top: str11col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state116"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col6.text)))
                    PropertyChanges {
                        target: str11col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col7
            anchors.top: str11col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state117"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col7.text)))
                    PropertyChanges {
                        target: str11col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col8
            anchors.top: str11col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state118"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col8.text)))
                    PropertyChanges {
                        target: str11col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str11col9
            anchors.top: str11col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str11col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state119"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr11col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr11col9.text)))
                    PropertyChanges {
                        target: str11col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr11col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr11col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col1
            anchors.top: str11inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr12col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse2.clicked(mouse2);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str12inf.height = textstr12inf.height+10
                                str12inf.visible = "true"
                                textstr12inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state121"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr12col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col9.text)))
                    }
                    PropertyChanges {
                        target: str12col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str12col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr12col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Овальность, перекос, неравномерный износ вращающегося кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str12inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str12col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str12inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse12
                            anchors.fill: parent
                            onClicked: {
                                str12inf.visible = "false"
                                textstr12inf.color = "white"
                                rec.height =+ hei - str12inf.height
                                flick.contentHeight =+ heiflick - str12inf.height
                                str12inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr12inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота при овальности, перекосе, неравномерном износе вращающегося кольца:</b>"+
                              "<br><b>fов=2·f1</b>"+
                              "<br>f1 - частота вращения ротора, Гц.</b>"+
                              "<br>Присутствует всегда, при диагностике следует отличать от вибраций, вызываемых двоякой жесткостью, нелинейных ультрагармонических колебаний второго порядка.</b>"+
                              "<br>Проявляется в прямом спектре вибрации.</b>"
                    }
                }

        Rectangle {
            id: str12col2
            anchors.top: str12col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state122"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col2.text)))
                    PropertyChanges {
                        target: str12col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col3
            anchors.top: str12col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state123"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col3.text)))
                    PropertyChanges {
                        target: str12col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "oval"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr12col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str12col4
            anchors.top: str12col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state124"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col4.text)))
                    PropertyChanges {
                        target: str12col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col5
            anchors.top: str12col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state125"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col5.text)))
                    PropertyChanges {
                        target: str12col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col6
            anchors.top: str12col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state126"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col6.text)))
                    PropertyChanges {
                        target: str12col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col7
            anchors.top: str12col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state127"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col7.text)))
                    PropertyChanges {
                        target: str12col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col8
            anchors.top: str12col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state128"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col8.text)))
                    PropertyChanges {
                        target: str12col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str12col9
            anchors.top: str12col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str12col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state129"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr12col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr12col9.text)))
                    PropertyChanges {
                        target: str12col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr12col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr12col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str13col1
            anchors.top: str12inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr13col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse2.clicked(mouse2);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str13inf.height = textstr13inf.height+10
                                str13inf.visible = "true"
                                textstr13inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state131"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr13col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col9.text)))
                    }
                    PropertyChanges {
                        target: str13col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str13col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr13col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Расцентровка обоймы подшипника"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str13inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str13col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str13inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse13
                            anchors.fill: parent
                            onClicked: {
                                str13inf.visible = "false"
                                textstr13inf.color = "white"
                                rec.height =+ hei - str13inf.height
                                flick.contentHeight =+ heiflick - str13inf.height
                                str13inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr13inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Расцентровка обоймы подшипника характеризуется наличием первой f1 и второй 2·f1 гармоник оборотной частоты в прямом спектре вибрации.</b>"
                    }
                }

        Rectangle {
            id: str13col2
            anchors.top: str13col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state132"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col2.text)))
                    PropertyChanges {
                        target: str13col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rasc1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr13col2
                            text: parseFloat(f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str13col3
            anchors.top: str13col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state133"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col3.text)))
                    PropertyChanges {
                        target: str13col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rasc2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr13col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str13col4
            anchors.top: str13col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state134"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col4.text)))
                    PropertyChanges {
                        target: str13col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str13col5
            anchors.top: str13col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state135"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col5.text)))
                    PropertyChanges {
                        target: str13col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str13col6
            anchors.top: str13col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state136"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col6.text)))
                    PropertyChanges {
                        target: str13col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str13col7
            anchors.top: str13col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state137"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col7.text)))
                    PropertyChanges {
                        target: str13col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str13col8
            anchors.top: str13col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state138"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col8.text)))
                    PropertyChanges {
                        target: str13col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str13col9
            anchors.top: str13col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str13col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state139"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr13col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr13col9.text)))
                    PropertyChanges {
                        target: str13col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr13col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr13col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str14col1
            anchors.top: str13inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr14col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse2.clicked(mouse2);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str14inf.height = textstr14inf.height+10
                                str14inf.visible = "true"
                                textstr14inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state141"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr14col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col9.text)))
                    }
                    PropertyChanges {
                        target: str14col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str14col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr14col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Гранность, некруглость дорожек качения, износ, раковины, трещины вращающегося кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str14inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str14col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str14inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse14
                            anchors.fill: parent
                            onClicked: {
                                str14inf.visible = "false"
                                textstr14inf.color = "white"
                                rec.height =+ hei - str14inf.height
                                flick.contentHeight =+ heiflick - str14inf.height
                                str14inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr14inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Эти дефекты проявляются на частотах n·f1, где n = 3, 4, 5...</b>"+
                              "<br>Присутствуют практически всегда. Следует отличать от ультрагармонических колебаний высших порядков.</b>"+
                              "<br>Проявляются в прямом спектре вибрации.</b>"
                    }
                }

        Rectangle {
            id: str14col2
            anchors.top: str14col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state142"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col2.text)))
                    PropertyChanges {
                        target: str14col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str14col3
            anchors.top: str14col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state143"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col3.text)))
                    PropertyChanges {
                        target: str14col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str14col4
            anchors.top: str14col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state144"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col4.text)))
                    PropertyChanges {
                        target: str14col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "gran3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr14col4
                            text: parseFloat(f1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str14col5
            anchors.top: str14col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state145"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col5.text)))
                    PropertyChanges {
                        target: str14col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "gran4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr14col5
                            text: parseFloat(f1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str14col6
            anchors.top: str14col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state146"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col6.text)))
                    PropertyChanges {
                        target: str14col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "gran5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr14col6
                            text: parseFloat(f1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str14col7
            anchors.top: str14col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state147"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col7.text)))
                    PropertyChanges {
                        target: str14col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "gran6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr14col7
                            text: parseFloat(f1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str14col8
            anchors.top: str14col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state148"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col8.text)))
                    PropertyChanges {
                        target: str14col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "gran7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr14col8
                            text: parseFloat(f1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str14col9
            anchors.top: str14col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str14col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state149"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr14col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr14col9.text)))
                    PropertyChanges {
                        target: str14col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr14col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr14col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "gran8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr14col9
                            text: parseFloat(f1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str15col1
            anchors.top: str14inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr15col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse2.clicked(mouse2);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str15inf.height = textstr15inf.height+10
                                str15inf.visible = "true"
                                textstr15inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state151"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr15col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col9.text)))
                    }
                    PropertyChanges {
                        target: str15col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str15col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr15col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Радиальные зазоры"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str15inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str15col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str15inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse15
                            anchors.fill: parent
                            onClicked: {
                                str15inf.visible = "false"
                                textstr15inf.color = "white"
                                rec.height =+ hei - str15inf.height
                                flick.contentHeight =+ heiflick - str15inf.height
                                str15inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr15inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота проявления радиальных зазоров рассчитывается по формуле:</b>"+
                              "<br><b>fрз=z/2·f1</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>z - количество тел качения, шт.</b>"
                    }
                }

        Rectangle {
            id: str15col2
            anchors.top: str15col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state152"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col2.text)))
                    PropertyChanges {
                        target: str15col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "radzaz"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr15col2
                            text: parseFloat(radzaz).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str15col3
            anchors.top: str15col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state153"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col3.text)))
                    PropertyChanges {
                        target: str15col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str15col4
            anchors.top: str15col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state154"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col4.text)))
                    PropertyChanges {
                        target: str15col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str15col5
            anchors.top: str15col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state155"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col5.text)))
                    PropertyChanges {
                        target: str15col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str15col6
            anchors.top: str15col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state156"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col6.text)))
                    PropertyChanges {
                        target: str15col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str15col7
            anchors.top: str15col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state157"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col7.text)))
                    PropertyChanges {
                        target: str15col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str15col8
            anchors.top: str15col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state158"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col8.text)))
                    PropertyChanges {
                        target: str15col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str15col9
            anchors.top: str15col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str15col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state159"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr15col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr15col9.text)))
                    PropertyChanges {
                        target: str15col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr15col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr15col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap

                }
            }
        }
        Rectangle {
            id: str16col1
            anchors.top: str15inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr16col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse2.clicked(mouse2);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris001.source = "file:./Images/ris001.png"
                                str16inf.height = textstr16inf.height+ris001.height+10
                                str16inf.visible = "true"
                                textstr16inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state161"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr16col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col9.text)))
                    }
                    PropertyChanges {
                        target: str16col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str16col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr16col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Неоднородный радиальный натяг"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str16inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str16col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str16inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse16
                            anchors.fill: parent
                            onClicked: {
                                str16inf.visible = "false"
                                textstr16inf.color = "white"
                                rec.height =+ hei - str16inf.height
                                flick.contentHeight =+ heiflick - str16inf.height
                                str16inf.height = 0
                                ris001.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr16inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Неоднородный радиальный натяг проявляется на частотах k·f1, где k = 1, 2 (возможно и большее количество гармоник).</b>"+
                              "<br>Эти частоты присутствуют как в прямом спектре, так и в спектре огибающей вибрации.</b>"+
                              "<br>Является обычно дефектом сборки подшипника. Наиболее часто встречающейся причиной этого является посадка подшипника на вал, диаметр которого больше допустимого. Признаком этого дефекта является рост гармонических составляющих на четных гармониках (2, 4, 6 …) частоты вращения. Такой же спектр будет получен и при посадке внутреннего кольца подшипника на вал без натяга.</b>"
                    }
                        Image {
                            id: ris001
                            anchors.top: textstr16inf.bottom
                            anchors.topMargin: 5
                            anchors.leftMargin: 5
                            anchors.rightMargin: 5
                            anchors.bottomMargin: 0
                            anchors.left: parent.left
                            anchors.right: parent.right
                            //source: "Pic/ris001.png"
                            fillMode: Image.PreserveAspectFit
                            mipmap: true
                            //mirror: true
                            smooth: true
                        }
                }
        Rectangle {
            id: str16col2
            anchors.top: str16col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state162"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col2.text)))
                    PropertyChanges {
                        target: str16col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nat1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr16col2
                            text: parseFloat(f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str16col3
            anchors.top: str16col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state163"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col3.text)))
                    PropertyChanges {
                        target: str16col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "nat2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr16col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str16col4
            anchors.top: str16col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state164"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col4.text)))
                    PropertyChanges {
                        target: str16col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str16col5
            anchors.top: str16col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state165"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col5.text)))
                    PropertyChanges {
                        target: str16col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str16col6
            anchors.top: str16col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state166"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col6.text)))
                    PropertyChanges {
                        target: str16col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str16col7
            anchors.top: str16col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state167"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col7.text)))
                    PropertyChanges {
                        target: str16col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str16col8
            anchors.top: str16col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state168"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col8.text)))
                    PropertyChanges {
                        target: str16col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str16col9
            anchors.top: str16col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str16col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state169"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr16col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr16col9.text)))
                    PropertyChanges {
                        target: str16col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr16col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr16col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap

                }
            }
        }
        Rectangle {
            id: str17col1
            anchors.top: str16inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr17col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse2.clicked(mouse2);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris002.source = "file:./Images/ris002.png"
                                str17inf.height = textstr17inf.height+ris002.height+10
                                str17inf.visible = "true"
                                textstr17inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state171"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr17col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col9.text)))
                    }
                    PropertyChanges {
                        target: str17col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str17col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr17col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Проскальзывание в посадочном месте"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str17inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str17col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str17inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse17
                            anchors.fill: parent
                            onClicked: {
                                str17inf.visible = "false"
                                textstr17inf.color = "white"
                                rec.height =+ hei - str17inf.height
                                flick.contentHeight =+ heiflick - str17inf.height
                                str17inf.height = 0
                                ris002.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr17inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Является достаточно редким дефектом. Фактически это означает, что обнаруживается случай, когда подшипник заклинило, и сепаратор не вращается относительно колец подшипника. При этом наблюдаются удары с частотами k·f1, а удары на других частотах отсутствуют. Проявляется в спектре огибающей.</b>"
                    }
                    Image {
                        id: ris002
                        anchors.top: textstr17inf.bottom
                        anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 0
                        anchors.left: parent.left
                        anchors.right: parent.right
                        //source: "Pic/ris001.png"
                        fillMode: Image.PreserveAspectFit
                        mipmap: true
                        //mirror: true
                        smooth: true
                    }
                }

        Rectangle {
            id: str17col2
            anchors.top: str17col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state172"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col2.text)))
                    PropertyChanges {
                        target: str17col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col2
                            text: parseFloat(f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col3
            anchors.top: str17col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state173"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col3.text)))
                    PropertyChanges {
                        target: str17col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col4
            anchors.top: str17col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state174"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col4.text)))
                    PropertyChanges {
                        target: str17col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col4
                            text: parseFloat(f1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col5
            anchors.top: str17col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state175"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col5.text)))
                    PropertyChanges {
                        target: str17col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col5
                            text: parseFloat(f1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col6
            anchors.top: str17col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state176"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col6.text)))
                    PropertyChanges {
                        target: str17col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col6
                            text: parseFloat(f1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col7
            anchors.top: str17col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state177"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col7.text)))
                    PropertyChanges {
                        target: str17col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col7
                            text: parseFloat(f1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col8
            anchors.top: str17col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state178"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col8.text)))
                    PropertyChanges {
                        target: str17col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col8
                            text: parseFloat(f1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str17col9
            anchors.top: str17col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str17col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state179"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr17col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr17col9.text)))
                    PropertyChanges {
                        target: str17col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr17col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr17col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pros8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr17col9
                            text: parseFloat(f1*8).toFixed(2)
                        }
                    }
                    ]

                }
            }
        }
        Rectangle {
            id: str18col1
            anchors.top: str17inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr18col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse2.clicked(mouse2);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str18inf.height = textstr18inf.height+10
                                str18inf.visible = "true"
                                textstr18inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state181"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr18col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col9.text)))
                    }
                    PropertyChanges {
                        target: str18col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str18col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr18col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Увеличенные зазоры в подшипнике"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str18inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str18col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str18inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse18
                            anchors.fill: parent
                            onClicked: {
                                str18inf.visible = "false"
                                textstr18inf.color = "white"
                                rec.height =+ hei - str18inf.height
                                flick.contentHeight =+ heiflick - str18inf.height
                                str18inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr18inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>При увеличенных зазорах в подшипнике в прямом спектре вибрации может наблюдаться ряд гармоник оборотной частоты k·f1, где k = 1, 2, 3, 4, 5, 6.</b>"
                    }
                }
        Rectangle {
            id: str18col2
            anchors.top: str18col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state182"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col2.text)))
                    PropertyChanges {
                        target: str18col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "zazor1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr18col2
                            text: parseFloat(f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str18col3
            anchors.top: str18col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state183"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col3.text)))
                    PropertyChanges {
                        target: str18col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "zazor2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr18col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str18col4
            anchors.top: str18col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state184"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col4.text)))
                    PropertyChanges {
                        target: str18col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "zazor3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr18col4
                            text: parseFloat(f1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str18col5
            anchors.top: str18col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state185"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col5.text)))
                    PropertyChanges {
                        target: str18col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "zazor4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr18col5
                            text: parseFloat(f1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str18col6
            anchors.top: str18col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state186"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col6.text)))
                    PropertyChanges {
                        target: str18col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "zazor5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr18col6
                            text: parseFloat(f1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str18col7
            anchors.top: str18col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state187"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col7.text)))
                    PropertyChanges {
                        target: str18col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "zazor6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr18col7
                            text: parseFloat(f1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str18col8
            anchors.top: str18col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state188"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col8.text)))
                    PropertyChanges {
                        target: str18col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str18col9
            anchors.top: str18col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str18col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state189"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr18col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr18col9.text)))
                    PropertyChanges {
                        target: str18col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr18col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr18col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap

                }
            }
        }
        Rectangle {
            id: str19col1
            anchors.top: str18inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr19col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse2.clicked(mouse2);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str19inf.height = textstr19inf.height+10
                                str19inf.visible = "true"
                                textstr19inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }

            states: [
                State {
                    name: "state191"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr19col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col9.text)))
                    }
                    PropertyChanges {
                        target: str19col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str19col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr19col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос подшипника в корпусе"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str19inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str19col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str19inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse19
                            anchors.fill: parent
                            onClicked: {
                                str19inf.visible = "false"
                                textstr19inf.color = "white"
                                rec.height =+ hei - str19inf.height
                                flick.contentHeight =+ heiflick - str19inf.height
                                str19inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr19inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Перекос подшипника в корпусе проявляется на частотах k·f1, где k = 0,5; 2 в прямом спектре вибрации.</b>"
                    }
                }

        Rectangle {
            id: str19col2
            anchors.top: str19col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state192"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col2.text)))
                    PropertyChanges {
                        target: str19col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perekos1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr19col2
                            text: parseFloat(f1/2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str19col3
            anchors.top: str19col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state193"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col3.text)))
                    PropertyChanges {
                        target: str19col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perekos2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr19col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str19col4
            anchors.top: str19col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state194"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col4.text)))
                    PropertyChanges {
                        target: str19col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str19col5
            anchors.top: str19col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state195"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col5.text)))
                    PropertyChanges {
                        target: str19col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str19col6
            anchors.top: str19col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state196"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col6.text)))
                    PropertyChanges {
                        target: str19col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str19col7
            anchors.top: str19col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state197"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col7.text)))
                    PropertyChanges {
                        target: str19col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str19col8
            anchors.top: str19col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state198"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col8.text)))
                    PropertyChanges {
                        target: str19col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str19col9
            anchors.top: str19col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str19col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state199"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr19col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr19col9.text)))
                    PropertyChanges {
                        target: str19col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr19col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr19col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap

                }
            }
        }
        Rectangle {
            id: str20col1
            anchors.top: str19inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr20col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse2.clicked(mouse2);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str20inf.height = textstr20inf.height+10
                                str20inf.visible = "true"
                                textstr20inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state201"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr20col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col9.text)))
                    }
                    PropertyChanges {
                        target: str20col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str20col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr20col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Толчки отдельных деталей подшипников"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str20inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str20col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str20inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse20
                            anchors.fill: parent
                            onClicked: {
                                str20inf.visible = "false"
                                textstr20inf.color = "white"
                                rec.height =+ hei - str20inf.height
                                flick.contentHeight =+ heiflick - str20inf.height
                                str20inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr20inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Частота толчков отдельных деталей подшипников в прямом спектре вибрации:</b>"+
                              "<br><b>fтд=0,45·z·f1</b>"+
                              "<br>f1 - частота вращения ротора, Гц;</b>"+
                              "<br>z - количество тел качения, шт.</b>"
                    }
                }
        Rectangle {
            id: str20col2
            anchors.top: str20col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state202"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col2.text)))
                    PropertyChanges {
                        target: str20col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "tol"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr20col2
                            text: parseFloat(tol).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str20col3
            anchors.top: str20col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state203"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col3.text)))
                    PropertyChanges {
                        target: str20col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str20col4
            anchors.top: str20col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state204"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col4.text)))
                    PropertyChanges {
                        target: str20col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str20col5
            anchors.top: str20col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state205"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col5.text)))
                    PropertyChanges {
                        target: str20col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str20col6
            anchors.top: str20col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state206"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col6.text)))
                    PropertyChanges {
                        target: str20col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str20col7
            anchors.top: str20col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state207"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col7.text)))
                    PropertyChanges {
                        target: str20col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str20col8
            anchors.top: str20col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state208"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col8.text)))
                    PropertyChanges {
                        target: str20col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str20col9
            anchors.top: str20col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str20col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state209"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr20col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr20col9.text)))
                    PropertyChanges {
                        target: str20col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr20col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr20col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap

                }
            }
        }
        Rectangle {
            id: str21col1
            anchors.top: str20inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr21col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse2.clicked(mouse2);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str21inf.height = textstr21inf.height+10
                                str21inf.visible = "true"
                                textstr21inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state211"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr21col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col9.text)))
                    }
                    PropertyChanges {
                        target: str21col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str21col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr21col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Неуравновешенность сепаратора, разномерность тел качения, неравномерный износ тел качения, усталостное выкрашивание"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str21inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str21col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str21inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse21
                            anchors.fill: parent
                            onClicked: {
                                str21inf.visible = "false"
                                textstr21inf.color = "white"
                                rec.height =+ hei - str21inf.height
                                flick.contentHeight =+ heiflick - str21inf.height
                                str21inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr21inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Данные дефекты характеризуются наличием в прямом спектре вибрации частоты вращения сепаратора fс или рядом гармоник k·fс.</b>"+
                              "<br>Неуравновешенность обнаружить трудно из-за малой массы кольца. Обычно сопровождается дефектами других деталей.</b>"
                    }
                }
        Rectangle {
            id: str21col2
            anchors.top: str21col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state212"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col2.text)))
                    PropertyChanges {
                        target: str21col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col2
                            text: parseFloat(sep1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col3
            anchors.top: str21col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state213"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col3.text)))
                    PropertyChanges {
                        target: str21col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col3
                            text: parseFloat(sep1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col4
            anchors.top: str21col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state214"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col4.text)))
                    PropertyChanges {
                        target: str21col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col4
                            text: parseFloat(sep1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col5
            anchors.top: str21col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state215"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col5.text)))
                    PropertyChanges {
                        target: str21col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col5
                            text: parseFloat(sep1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col6
            anchors.top: str21col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state216"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col6.text)))
                    PropertyChanges {
                        target: str21col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col6
                            text: parseFloat(sep1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col7
            anchors.top: str21col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state217"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col7.text)))
                    PropertyChanges {
                        target: str21col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col7
                            text: parseFloat(sep1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col8
            anchors.top: str21col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state218"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col8.text)))
                    PropertyChanges {
                        target: str21col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col8
                            text: parseFloat(sep1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str21col9
            anchors.top: str21col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str21col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state219"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr21col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr21col9.text)))
                    PropertyChanges {
                        target: str21col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr21col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr21col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "separ8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr21col9
                            text: parseFloat(sep1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str22col1
            anchors.top: str21inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr22col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse2.clicked(mouse2);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str22inf.height = textstr22inf.height+10
                                str22inf.visible = "true"
                                textstr22inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state221"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr22col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col9.text)))
                    }
                    PropertyChanges {
                        target: str22col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str22col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr22col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Нарушение центровки валов (принудительная центровка), единичный дефект на наружном или внутреннем кольце, периодическое изменение жесткости при групповом вращении тел качения"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str22inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str22col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str22inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse22
                            anchors.fill: parent
                            onClicked: {
                                str22inf.visible = "false"
                                textstr22inf.color = "white"
                                rec.height =+ hei - str22inf.height
                                flick.contentHeight =+ heiflick - str22inf.height
                                str22inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr22inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Проявляются на частоте внутреннего кольца fвн, либо наружного fнар.</b>"
                    }
                }
        Rectangle {
            id: str22col2
            anchors.top: str22col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state222"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col2.text)))
                    PropertyChanges {
                        target: str22col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "narush1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr22col2
                            text: parseFloat(nar1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str22col3
            anchors.top: str22col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state223"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col3.text)))
                    PropertyChanges {
                        target: str22col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "narush2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr22col3
                            text: parseFloat(vn1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str22col4
            anchors.top: str22col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state224"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col4.text)))
                    PropertyChanges {
                        target: str22col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str22col5
            anchors.top: str22col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state225"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col5.text)))
                    PropertyChanges {
                        target: str22col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str22col6
            anchors.top: str22col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state226"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col6.text)))
                    PropertyChanges {
                        target: str22col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str22col7
            anchors.top: str22col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state227"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col7.text)))
                    PropertyChanges {
                        target: str22col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str22col8
            anchors.top: str22col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state228"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col8.text)))
                    PropertyChanges {
                        target: str22col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str22col9
            anchors.top: str22col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str22col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state229"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr22col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr22col9.text)))
                    PropertyChanges {
                        target: str22col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr22col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr22col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str23col1
            anchors.top: str22inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr23col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse2.clicked(mouse2);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris003.source = "file:./Images/ris003.png"
                                ris004.source = "file:./Images/ris004.png"
                                str23inf.height = textstr23inf.height+ris003.height+textris004.height+ris004.height+10
                                str23inf.visible = "true"
                                textstr23inf.color = "#353637"
                                textris004.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state231"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr23col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col9.text)))
                    }
                    PropertyChanges {
                        target: str23col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str23col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr23col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос наружного кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str23inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str23col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str23inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse23
                            anchors.fill: parent
                            onClicked: {
                                str23inf.visible = "false"
                                textstr23inf.color = "white"
                                textris004.color = "white"
                                rec.height =+ hei - str23inf.height
                                flick.contentHeight =+ heiflick - str23inf.height
                                str23inf.height = 0
                                ris003.source = ""
                                ris004.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr23inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Обычно возникает при монтаже подшипника из-за дефектов посадочного места. Проявляется на гармониках, кратных частоте перекатывания тел качения по наружному кольцу. Отличительным признаком является наибольший рост на 2·fнар, а так же четных гармониках 2·k·fнар (спектр огибающей).</b>"
                    }
                    Image {
                        id: ris003
                        anchors.top: textstr23inf.bottom
                        anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 0
                        anchors.left: parent.left
                        anchors.right: parent.right
                        //source: "Pic/ris001.png"
                        fillMode: Image.PreserveAspectFit
                        mipmap: true
                        //mirror: true
                        smooth: true
                    }
                    Text {
                        id: textris004
                        anchors.top: ris003.bottom
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>При перекосе наружного кольца на внутреннем кольце равномерно широкий след качения распространяется посередине дорожки качения по всей окружности. На наружном кольце следы качения на двух диаметрально противоположных участках дорожки качения, смещенные друг относительно друга по диагонали.</b>"
                    }
                    Image {
                        id: ris004
                        anchors.top: textris004.bottom
                        anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 0
                        anchors.left: parent.left
                        anchors.right: parent.right
                        //source: "Pic/ris001.png"
                        fillMode: Image.PreserveAspectFit
                        mipmap: true
                        //mirror: true
                        smooth: true
                    }
                }
        Rectangle {
            id: str23col2
            anchors.top: str23col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state232"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col2.text)))
                    PropertyChanges {
                        target: str23col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col2
                            text: parseFloat(nar1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col3
            anchors.top: str23col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state233"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col3.text)))
                    PropertyChanges {
                        target: str23col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col3
                            text: parseFloat(nar1*2*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col4
            anchors.top: str23col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state234"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col4.text)))
                    PropertyChanges {
                        target: str23col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col4
                            text: parseFloat(nar1*2*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col5
            anchors.top: str23col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state235"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col5.text)))
                    PropertyChanges {
                        target: str23col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col5
                            text: parseFloat(nar1*2*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col6
            anchors.top: str23col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state236"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col6.text)))
                    PropertyChanges {
                        target: str23col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col6
                            text: parseFloat(nar1*2*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col7
            anchors.top: str23col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state237"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col7.text)))
                    PropertyChanges {
                        target: str23col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col7
                            text: parseFloat(nar1*2*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col8
            anchors.top: str23col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state238"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col8.text)))
                    PropertyChanges {
                        target: str23col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col8
                            text: parseFloat(nar1*2*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str23col9
            anchors.top: str23col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str23col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state239"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr23col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr23col9.text)))
                    PropertyChanges {
                        target: str23col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr23col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr23col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pernar8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr23col9
                            text: parseFloat(nar1*2*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col1
            anchors.top: str23inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr24col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse2.clicked(mouse2);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris005.source = "file:./Images/ris005.png"
                                ris006.source = "file:./Images/ris006.png"
                                str24inf.height = textstr24inf.height+ris005.height+textris006.height+ris006.height+10
                                str24inf.visible = "true"
                                textstr24inf.color = "#353637"
                                textris006.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state241"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr24col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col9.text)))
                    }
                    PropertyChanges {
                        target: str24col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str24col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr24col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос внутреннего кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str24inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str24col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str24inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse24
                            anchors.fill: parent
                            onClicked: {
                                str24inf.visible = "false"
                                textstr24inf.color = "white"
                                textris006.color = "white"
                                rec.height =+ hei - str24inf.height
                                flick.contentHeight =+ heiflick - str24inf.height
                                str24inf.height = 0
                                ris005.source = ""
                                ris006.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr24inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>При перекосе внутреннего кольца в спектре огибающей доминируют четные гармоники возбуждения внутреннего кольца 2·k·fвн.</b>"
                    }
                    Image {
                        id: ris005
                        anchors.top: textstr24inf.bottom
                        anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 0
                        anchors.left: parent.left
                        anchors.right: parent.right
                        //source: "Pic/ris001.png"
                        fillMode: Image.PreserveAspectFit
                        mipmap: true
                        //mirror: true
                        smooth: true
                    }
                    Text {
                        id: textris006
                        anchors.top: ris005.bottom
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>При перекосе внутреннего кольца на внутреннем кольце след качения, самый широкий в направлении нагрузки, к концу зоны нагружения вырождается в острие. Зазор в подшипнике уменьшается, длина следа качения по окружности дорожки качения зависит от того, насколько уменьшается зазор в подшипнике.</b>"
                    }
                    Image {
                        id: ris006
                        anchors.top: textris006.bottom
                        anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 0
                        anchors.left: parent.left
                        anchors.right: parent.right
                        //source: "Pic/ris001.png"
                        fillMode: Image.PreserveAspectFit
                        mipmap: true
                        //mirror: true
                        smooth: true
                    }
                }
        Rectangle {
            id: str24col2
            anchors.top: str24col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state242"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col2.text)))
                    PropertyChanges {
                        target: str24col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col2
                            text: parseFloat(vn1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col3
            anchors.top: str24col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state243"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col3.text)))
                    PropertyChanges {
                        target: str24col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col3
                            text: parseFloat(vn1*2*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col4
            anchors.top: str24col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state244"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col4.text)))
                    PropertyChanges {
                        target: str24col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col4
                            text: parseFloat(vn1*2*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col5
            anchors.top: str24col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state245"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col5.text)))
                    PropertyChanges {
                        target: str24col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col5
                            text: parseFloat(vn1*2*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col6
            anchors.top: str24col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state246"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col6.text)))
                    PropertyChanges {
                        target: str24col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col6
                            text: parseFloat(vn1*2*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col7
            anchors.top: str24col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state247"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col7.text)))
                    PropertyChanges {
                        target: str24col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col7
                            text: parseFloat(vn1*2*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col8
            anchors.top: str24col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state248"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col8.text)))
                    PropertyChanges {
                        target: str24col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col8
                            text: parseFloat(vn1*2*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str24col9
            anchors.top: str24col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str24col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state249"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr24col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr24col9.text)))
                    PropertyChanges {
                        target: str24col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr24col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr24col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pervn8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr24col9
                            text: parseFloat(vn1*2*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str25col1
            anchors.top: str24inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr25col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse2.clicked(mouse2);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris007.source = "file:./Images/ris007.png"
                                str25inf.height = textstr25inf.height+ris007.height+10
                                str25inf.visible = "true"
                                textstr25inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state251"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr25col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col9.text)))
                    }
                    PropertyChanges {
                        target: str25col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str25col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr25col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Износ наружного кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str25inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str25col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str25inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse25
                            anchors.fill: parent
                            onClicked: {
                                str25inf.visible = "false"
                                textstr25inf.color = "white"
                                rec.height =+ hei - str25inf.height
                                flick.contentHeight =+ heiflick - str25inf.height
                                str25inf.height = 0
                                ris007.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr25inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>При износе наружного кольца в прямом спектре и спектре огибающей проявляются пики на частотах k·fнар, где k ≤ 3.</b>"+
                              "<br>Происходит локально, изменяя коэффициент трения на отдельных участках поверхности наружного кольца. В результате появляется плавная модуляция высокочастотной вибрации на частотах k·fнар. Причем наибольший рост происходит на первой гармонике, а амплитуда кратных гармоник быстро падает.</b>"
                    }
                    Image {
                                                id: ris007
                                                anchors.top: textstr25inf.bottom
                                                anchors.topMargin: 5
                                                anchors.leftMargin: 5
                                                anchors.rightMargin: 5
                                                anchors.bottomMargin: 0
                                                anchors.left: parent.left
                                                anchors.right: parent.right
                                                //source: "Pic/ris001.png"
                                                fillMode: Image.PreserveAspectFit
                                                mipmap: true
                                                //mirror: true
                                                smooth: true
                                            }
                }
        Rectangle {
            id: str25col2
            anchors.top: str25col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state252"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col2.text)))
                    PropertyChanges {
                        target: str25col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosnar1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr25col2
                            text: parseFloat(nar1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str25col3
            anchors.top: str25col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state253"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col3.text)))
                    PropertyChanges {
                        target: str25col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosnar2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr25col3
                            text: parseFloat(nar1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str25col4
            anchors.top: str25col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state254"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col4.text)))
                    PropertyChanges {
                        target: str25col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosnar3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr25col4
                            text: parseFloat(nar1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str25col5
            anchors.top: str25col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state255"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col5.text)))
                    PropertyChanges {
                        target: str25col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str25col6
            anchors.top: str25col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state256"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col6.text)))
                    PropertyChanges {
                        target: str25col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str25col7
            anchors.top: str25col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state257"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col7.text)))
                    PropertyChanges {
                        target: str25col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str25col8
            anchors.top: str25col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state258"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col8.text)))
                    PropertyChanges {
                        target: str25col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str25col9
            anchors.top: str25col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str25col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state259"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr25col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr25col9.text)))
                    PropertyChanges {
                        target: str25col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr25col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr25col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str26col1
            anchors.top: str25inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr26col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse2.clicked(mouse2);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris008.source = "file:./Images/ris008.png"
                                str26inf.height = textstr26inf.height+ris008.height+10
                                str26inf.visible = "true"
                                textstr26inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state261"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr26col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col9.text)))
                    }
                    PropertyChanges {
                        target: str26col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str26col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr26col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Раковины, трещины на наружном кольце"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str26inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str26col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str26inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse26
                            anchors.fill: parent
                            onClicked: {
                                str26inf.visible = "false"
                                textstr26inf.color = "white"
                                rec.height =+ hei - str26inf.height
                                flick.contentHeight =+ heiflick - str26inf.height
                                str26inf.height = 0
                                ris008.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr26inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Проявляются на частотах k·fнар, где k > 3.</b>"+
                              "<br>Приводят к появлению коротких ударных импульсов при контакте каждого тела качения с раковиной. В результате появляется ряд гармоник с частотами k·fнар. Отличительной особенностью спектра огибающей является большое число слабозатухающих гармоник.</b>"
                    }
                    Image {
                                                id: ris008
                                                anchors.top: textstr26inf.bottom
                                                anchors.topMargin: 5
                                                anchors.leftMargin: 5
                                                anchors.rightMargin: 5
                                                anchors.bottomMargin: 0
                                                anchors.left: parent.left
                                                anchors.right: parent.right
                                                //source: "Pic/ris001.png"
                                                fillMode: Image.PreserveAspectFit
                                                mipmap: true
                                                //mirror: true
                                                smooth: true
                                            }
                }
        Rectangle {
            id: str26col2
            anchors.top: str26col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state262"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col2.text)))
                    PropertyChanges {
                        target: str26col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col2
                            text: parseFloat(nar1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col3
            anchors.top: str26col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state263"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col3.text)))
                    PropertyChanges {
                        target: str26col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col3
                            text: parseFloat(nar1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col4
            anchors.top: str26col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state264"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col4.text)))
                    PropertyChanges {
                        target: str26col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col4
                            text: parseFloat(nar1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col5
            anchors.top: str26col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state265"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col5.text)))
                    PropertyChanges {
                        target: str26col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col5
                            text: parseFloat(nar1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col6
            anchors.top: str26col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state266"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col6.text)))
                    PropertyChanges {
                        target: str26col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col6
                            text: parseFloat(nar1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col7
            anchors.top: str26col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state267"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col7.text)))
                    PropertyChanges {
                        target: str26col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col7
                            text: parseFloat(nar1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col8
            anchors.top: str26col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state268"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col8.text)))
                    PropertyChanges {
                        target: str26col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col8
                            text: parseFloat(nar1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str26col9
            anchors.top: str26col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str26col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state269"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr26col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr26col9.text)))
                    PropertyChanges {
                        target: str26col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr26col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr26col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr26col9
                            text: parseFloat(nar1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col1
            anchors.top: str26inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //height: 20
            height: rowstr27col1.height + 5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse2.clicked(mouse2);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str27inf.height = textstr27inf.height+10
                                str27inf.visible = "true"
                                textstr27inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state271"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr27col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col9.text)))
                    }
                    PropertyChanges {
                        target: str27col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str27col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr27col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Износ внутреннего кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str27inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str27col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str27inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse27
                            anchors.fill: parent
                            onClicked: {
                                str27inf.visible = "false"
                                textstr27inf.color = "white"
                                rec.height =+ hei - str27inf.height
                                flick.contentHeight =+ heiflick - str27inf.height
                                str27inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr27inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Износ внутреннего кольца характеризуется наличием в прямом спектре и спектре огибающей гармоник k·f1.</b>"
                    }
                }
        Rectangle {
            id: str27col2
            anchors.top: str27col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state272"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col2.text)))
                    PropertyChanges {
                        target: str27col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col2
                            text: parseFloat(f1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col3
            anchors.top: str27col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state273"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col3.text)))
                    PropertyChanges {
                        target: str27col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col3
                            text: parseFloat(f1*2).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col4
            anchors.top: str27col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state274"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col4.text)))
                    PropertyChanges {
                        target: str27col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col4
                            text: parseFloat(f1*3).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col5
            anchors.top: str27col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state275"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col5.text)))
                    PropertyChanges {
                        target: str27col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col5
                            text: parseFloat(f1*4).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col6
            anchors.top: str27col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state276"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col6.text)))
                    PropertyChanges {
                        target: str27col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col6
                            text: parseFloat(f1*5).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col7
            anchors.top: str27col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state277"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col7.text)))
                    PropertyChanges {
                        target: str27col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col7
                            text: parseFloat(f1*6).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col8
            anchors.top: str27col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state278"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col8.text)))
                    PropertyChanges {
                        target: str27col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col8
                            text: parseFloat(f1*7).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str27col9
            anchors.top: str27col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str27col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state279"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr27col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr27col9.text)))
                    PropertyChanges {
                        target: str27col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr27col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr27col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "iznosvn8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr27col9
                            text: parseFloat(f1*8).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col1
            anchors.top: str27inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr28col1.height),(str28col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse2.clicked(mouse2);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris009.source = "file:./Images/ris009.png"
                                str28inf.height = textstr28inf.height+ris009.height+10
                                str28inf.visible = "true"
                                textstr28inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state281"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col21.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col22.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col23.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col24.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col25.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col31.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col32.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col33.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col34.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col35.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col41.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col42.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col43.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col44.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col45.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col51.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col52.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col53.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col54.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col55.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col61.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col62.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col63.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col64.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col65.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col71.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col72.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col73.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col74.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col75.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col81.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col82.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col83.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col84.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col85.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col91.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col92.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col93.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col94.text)))
                        & !(Number(parseFloat(plus))>=Number(parseFloat(textstr28col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col95.text)))
                    }
                    PropertyChanges {
                        target: str28col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str281col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str28col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr28col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Раковины, трещины на внутреннем кольце"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str281col1
            anchors.top: str27inf.bottom
            anchors.left: str28col1.right
            width: str2col1.width/3
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr281col1
                width: parent.width
                Label {
                    id: textstr281col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fвк-2·f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr282col1
                    anchors.top: textstr281col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк-f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr283col1
                    anchors.top: textstr282col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr284col1
                    anchors.top: textstr283col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк+f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr285col1
                    anchors.top: textstr284col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк+2·f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str28inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str28col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str28inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse28
                            anchors.fill: parent
                            onClicked: {
                                str28inf.visible = "false"
                                textstr28inf.color = "white"
                                rec.height =+ hei - str28inf.height
                                flick.contentHeight =+ heiflick - str28inf.height
                                str28inf.height = 0
                                ris009.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr28inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Эти дефекты в прямом спектре вибрации проявляются на частотах k·fвн, в спектре огибающей k·fвн ± n·f1.</b>"+
                              "<br>Приводят к появлению коротких ударных импульсов при контакте каждого тела качения с раковиной. В результате в спектре появляется ряд гармоник с частотами k·fвн, причем из-за того, что при слабом радиальном натяге в подшипнике величина удара зависит от нагрузки, т. е. от угла поворота кольца, у ряда гармоник в спектре огибающей появляются боковые составляющие, отличающиеся на ± n·f1.</b>"
                    }
                    Image {
                                                id: ris009
                                                anchors.top: textstr28inf.bottom
                                                anchors.topMargin: 5
                                                anchors.leftMargin: 5
                                                anchors.rightMargin: 5
                                                anchors.bottomMargin: 0
                                                anchors.left: parent.left
                                                anchors.right: parent.right
                                                //source: "Pic/ris001.png"
                                                fillMode: Image.PreserveAspectFit
                                                mipmap: true
                                                //mirror: true
                                                smooth: true
                                            }
                }
        Rectangle {
            id: str28col2
            anchors.top: str28col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: 10+textstr28col21.height+textstr28col22.height+textstr28col23.height+textstr28col24.height+textstr28col25.height//str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state282"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col21.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col22.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col23.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col24.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col25.text)))
                    }
                    PropertyChanges {
                        target: str28col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col21
                            text: parseFloat(vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col22
                            text: parseFloat(vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col23
                            text: parseFloat(vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col24
                            text: parseFloat(Number(vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col25
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col24.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn15"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col25
                            text: parseFloat(Number(vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col3
            anchors.top: str28col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state283"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col31.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col32.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col33.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col34.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col35.text)))
                    }
                    PropertyChanges {
                        target: str28col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col31
                            text: parseFloat(2*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col32
                            text: parseFloat(2*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col33
                            text: parseFloat(2*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col34
                            text: parseFloat(Number(2*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col35
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col34.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn25"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col35
                            text: parseFloat(Number(2*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col4
            anchors.top: str28col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state284"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col41.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col42.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col43.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col44.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col45.text)))
                    }
                    PropertyChanges {
                        target: str28col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col41
                            text: parseFloat(3*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col42
                            text: parseFloat(3*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col43
                            text: parseFloat(3*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col44
                            text: parseFloat(Number(3*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col45
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col44.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn35"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col45
                            text: parseFloat(Number(3*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col5
            anchors.top: str28col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state285"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col51.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col52.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col53.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col54.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col55.text)))
                    }
                    PropertyChanges {
                        target: str28col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col51
                            text: parseFloat(4*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col52
                            text: parseFloat(4*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col53
                            text: parseFloat(4*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col54
                            text: parseFloat(Number(4*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col55
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col54.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn45"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col55
                            text: parseFloat(Number(4*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col6
            anchors.top: str28col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state286"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col61.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col62.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col63.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col64.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col65.text)))
                    }
                    PropertyChanges {
                        target: str28col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col61
                            text: parseFloat(5*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col62
                            text: parseFloat(5*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col63
                            text: parseFloat(5*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col64
                            text: parseFloat(Number(5*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col65
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col64.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn55"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col65
                            text: parseFloat(Number(5*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col7
            anchors.top: str28col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state287"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col71.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col72.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col73.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col74.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col75.text)))
                    }
                    PropertyChanges {
                        target: str28col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col71
                            text: parseFloat(6*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col72
                            text: parseFloat(6*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col73
                            text: parseFloat(6*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col74
                            text: parseFloat(Number(6*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col75
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col74.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn65"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col75
                            text: parseFloat(Number(6*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col8
            anchors.top: str28col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state288"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col81.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col82.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col83.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col84.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col85.text)))
                    }
                    PropertyChanges {
                        target: str28col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col81
                            text: parseFloat(7*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col82
                            text: parseFloat(7*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col83
                            text: parseFloat(7*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col84
                            text: parseFloat(Number(7*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col85
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col84.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn75"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col85
                            text: parseFloat(Number(7*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str28col9
            anchors.top: str28col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str28col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state289"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr28col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col91.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col92.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col93.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col94.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr28col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr28col95.text)))
                    }
                    PropertyChanges {
                        target: str28col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr28col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr28col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col91
                            text: parseFloat(8*vn1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col92
                            text: parseFloat(8*vn1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col93
                            text: parseFloat(8*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col94
                            text: parseFloat(Number(8*vn1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr28col95
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr28col94.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rakvn85"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr28col95
                            text: parseFloat(Number(8*vn1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col1
            anchors.top: str28inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr29col1.height),(str29col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse2.clicked(mouse2);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str29inf.height = textstr29inf.height+10
                                str29inf.visible = "true"
                                textstr29inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state291"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col23.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col24.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col25.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col33.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col34.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col35.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col43.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col44.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col45.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col53.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col54.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col55.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col63.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col64.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col65.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col73.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col74.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col75.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col83.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col84.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col85.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col92.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col93.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col94.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr29col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col95.text)))
                    }
                    PropertyChanges {
                        target: str29col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str291col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str29col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr29col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос наружного кольца и дефекты (раковины, трещины) наружного кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str291col1
            anchors.top: str28inf.bottom
            anchors.left: str29col1.right
            width: str2col1.width/3
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr291col1
                width: parent.width
                Label {
                    id: textstr291col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fнк-2·f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr292col1
                    anchors.top: textstr291col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк-f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr293col1
                    anchors.top: textstr292col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr294col1
                    anchors.top: textstr293col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк+f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr295col1
                    anchors.top: textstr294col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк+2·f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str29inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str29col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str29inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse29
                            anchors.fill: parent
                            onClicked: {
                                str29inf.visible = "false"
                                textstr29inf.color = "white"
                                rec.height =+ hei - str29inf.height
                                flick.contentHeight =+ heiflick - str29inf.height
                                str29inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr29inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Данная совокупность дефектов проявляется на частотах k·fнар ± n·f1.</b>"+
                              "<br>Появляется в подшипниках со статической осевой нагрузкой.</b>"
                    }
                }
        Rectangle {
            id: str29col2
            anchors.top: str29col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr29col21.height+textstr29col22.height+textstr29col23.height+textstr29col24.height+textstr29col25.height),(textstr29col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state292"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col21.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col22.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col23.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col24.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col25.text)))
                    }
                    PropertyChanges {
                        target: str29col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col21
                            text: parseFloat(nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col22
                            text: parseFloat(nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col23
                            text: parseFloat(nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col24
                            text: parseFloat(Number(nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col25
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col24.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar15"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col25
                            text: parseFloat(Number(nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col3
            anchors.top: str29col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state293"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col31.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col32.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col33.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col34.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col35.text)))
                    }
                    PropertyChanges {
                        target: str29col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col31
                            text: parseFloat(2*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col32
                            text: parseFloat(2*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col33
                            text: parseFloat(2*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col34
                            text: parseFloat(Number(2*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col35
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col34.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar25"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col35
                            text: parseFloat(Number(2*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col4
            anchors.top: str29col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state294"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col41.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col42.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col43.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col44.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col45.text)))
                    }
                    PropertyChanges {
                        target: str29col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col41
                            text: parseFloat(3*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col42
                            text: parseFloat(3*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col43
                            text: parseFloat(3*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col44
                            text: parseFloat(Number(3*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col45
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col44.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar35"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col45
                            text: parseFloat(Number(3*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col5
            anchors.top: str29col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state295"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col51.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col52.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col53.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col54.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col55.text)))
                    }
                    PropertyChanges {
                        target: str29col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col51
                            text: parseFloat(4*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col52
                            text: parseFloat(4*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col53
                            text: parseFloat(4*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col54
                            text: parseFloat(Number(4*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col55
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col54.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar45"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col55
                            text: parseFloat(Number(4*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col6
            anchors.top: str29col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state296"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col61.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col62.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col63.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col64.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col65.text)))
                    }
                    PropertyChanges {
                        target: str29col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col61
                            text: parseFloat(5*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col62
                            text: parseFloat(5*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col63
                            text: parseFloat(5*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col64
                            text: parseFloat(Number(5*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col65
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col64.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar55"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col65
                            text: parseFloat(Number(5*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col7
            anchors.top: str29col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state297"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col71.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col72.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col73.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col74.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col75.text)))
                    }
                    PropertyChanges {
                        target: str29col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col71
                            text: parseFloat(6*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col72
                            text: parseFloat(6*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col73
                            text: parseFloat(6*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col74
                            text: parseFloat(Number(6*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col75
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col74.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar65"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col75
                            text: parseFloat(Number(6*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col8
            anchors.top: str29col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state298"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col81.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col82.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col83.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col84.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col85.text)))
                    }
                    PropertyChanges {
                        target: str29col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col81
                            text: parseFloat(7*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col82
                            text: parseFloat(7*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col83
                            text: parseFloat(7*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col84
                            text: parseFloat(Number(7*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col85
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col84.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar75"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col85
                            text: parseFloat(Number(7*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str29col9
            anchors.top: str29col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str29col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state299"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr29col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col91.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col92.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col93.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col94.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr29col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr29col95.text)))
                    }
                    PropertyChanges {
                        target: str29col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr29col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr29col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col91
                            text: parseFloat(8*nar1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col92
                            text: parseFloat(8*nar1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col93
                            text: parseFloat(8*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col94
                            text: parseFloat(Number(8*nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr29col95
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr29col94.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "raknar85"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr29col95
                            text: parseFloat(Number(8*nar1)+Number(2*f1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col1
            anchors.top: str29inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr30col1.height),(str30col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse2.clicked(mouse2);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str30inf.height = textstr30inf.height+10
                                str30inf.visible = "true"
                                textstr30inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state301"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col23.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col24.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col25.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col33.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col34.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col35.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col43.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col44.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col45.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col53.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col54.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col55.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col63.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col64.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col65.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col73.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col74.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col75.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col83.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col84.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col85.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col92.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col93.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col94.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr30col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col95.text)))
                    }
                    PropertyChanges {
                        target: str30col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str301col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str30col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr30col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос внутреннего кольца и дефекты (раковины, трещины) внутреннего кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str301col1
            anchors.top: str29inf.bottom
            anchors.left: str30col1.right
            width: str2col1.width/3
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr301col1
                width: parent.width
                Label {
                    id: textstr301col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fвк-2(f1-fс)"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr302col1
                    anchors.top: textstr301col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк-(f1-fс)"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr303col1
                    anchors.top: textstr302col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr304col1
                    anchors.top: textstr303col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк+(f1-fс)"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr305col1
                    anchors.top: textstr304col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fвк+2(f1-fс)"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str30inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str30col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str30inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse30
                            anchors.fill: parent
                            onClicked: {
                                str30inf.visible = "false"
                                textstr30inf.color = "white"
                                rec.height =+ hei - str30inf.height
                                flick.contentHeight =+ heiflick - str30inf.height
                                str30inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr30inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Данная группа дефектов проявляется на частотах k·fвн ± n·(f1-fс).</b>"+
                              "<br>Появляется в подшипниках со статической осевой нагрузкой.</b>"
                    }
                }
        Rectangle {
            id: str30col2
            anchors.top: str30col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr30col21.height+textstr30col22.height+textstr30col23.height+textstr30col24.height+textstr30col25.height),(rowstr30col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state302"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col21.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col22.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col23.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col24.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col25.text)))
                    }
                    PropertyChanges {
                        target: str30col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col21
                            text: parseFloat(vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col22
                            text: parseFloat(vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col23
                            text: parseFloat(vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col24
                            text: parseFloat(Number(vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col25
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col24.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn15"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col25
                            text: parseFloat(Number(vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col3
            anchors.top: str30col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state303"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col31.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col32.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col33.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col34.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col35.text)))
                    }
                    PropertyChanges {
                        target: str30col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col31
                            text: parseFloat(2*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col32
                            text: parseFloat(2*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col33
                            text: parseFloat(2*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col34
                            text: parseFloat(Number(2*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col35
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col34.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn25"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col35
                            text: parseFloat(Number(2*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col4
            anchors.top: str30col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state304"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col41.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col42.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col43.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col44.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col45.text)))
                    }
                    PropertyChanges {
                        target: str30col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col41
                            text: parseFloat(3*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col42
                            text: parseFloat(3*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col43
                            text: parseFloat(3*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col44
                            text: parseFloat(Number(3*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col45
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col44.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn35"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col45
                            text: parseFloat(Number(3*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col5
            anchors.top: str30col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state305"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col51.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col52.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col53.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col54.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col55.text)))
                    }
                    PropertyChanges {
                        target: str30col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col51
                            text: parseFloat(4*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col52
                            text: parseFloat(4*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col53
                            text: parseFloat(4*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col54
                            text: parseFloat(Number(4*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col55
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col54.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn45"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col55
                            text: parseFloat(Number(4*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col6
            anchors.top: str30col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state306"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col61.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col62.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col63.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col64.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col65.text)))
                    }
                    PropertyChanges {
                        target: str30col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col61
                            text: parseFloat(5*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col62
                            text: parseFloat(5*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col63
                            text: parseFloat(5*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col64
                            text: parseFloat(Number(5*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col65
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col64.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn55"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col65
                            text: parseFloat(Number(5*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col7
            anchors.top: str30col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state307"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col71.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col72.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col73.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col74.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col75.text)))
                    }
                    PropertyChanges {
                        target: str30col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col71
                            text: parseFloat(6*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col72
                            text: parseFloat(6*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col73
                            text: parseFloat(6*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col74
                            text: parseFloat(Number(6*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col75
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col74.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn65"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col75
                            text: parseFloat(Number(6*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col8
            anchors.top: str30col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state308"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col81.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col82.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col83.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col84.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col85.text)))
                    }
                    PropertyChanges {
                        target: str30col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col81
                            text: parseFloat(7*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col82
                            text: parseFloat(7*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col83
                            text: parseFloat(7*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col84
                            text: parseFloat(Number(7*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col85
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col84.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn75"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col85
                            text: parseFloat(Number(7*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str30col9
            anchors.top: str30col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str30col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state309"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr30col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col91.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col92.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col93.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col94.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr30col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr30col95.text)))
                    }
                    PropertyChanges {
                        target: str30col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr30col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr30col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col91
                            text: parseFloat(8*vn1-2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col92
                            text: parseFloat(8*vn1-(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col93
                            text: parseFloat(8*vn1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col94
                            text: parseFloat(Number(8*vn1)+(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr30col95
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr30col94.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perrakvn85"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr30col95
                            text: parseFloat(Number(8*vn1)+2*(Number(f1)-Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col1
            anchors.top: str30inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr31col1.height),(str31col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse2.clicked(mouse2);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str31inf.height = textstr31inf.height+10
                                str31inf.visible = "true"
                                textstr31inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state311"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col23.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col24.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col25.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col33.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col34.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col35.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col43.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col44.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col45.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col53.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col54.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col55.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col63.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col64.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col65.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col73.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col74.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col75.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col83.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col84.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col85.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col92.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col93.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col94.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr31col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col95.text)))
                    }
                    PropertyChanges {
                        target: str31col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str311col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str31col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr31col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос наружного кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str311col1
            anchors.top: str30inf.bottom
            anchors.left: str31col1.right
            width: str2col1.width/3
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr311col1
                width: parent.width
                Label {
                    id: textstr311col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fнк-2·fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr312col1
                    anchors.top: textstr311col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк-fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr313col1
                    anchors.top: textstr312col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr314col1
                    anchors.top: textstr313col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк+fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr315col1
                    anchors.top: textstr314col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк+2·fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str31inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str31col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str31inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse31
                            anchors.fill: parent
                            onClicked: {
                                str31inf.visible = "false"
                                textstr31inf.color = "white"
                                rec.height =+ hei - str31inf.height
                                flick.contentHeight =+ heiflick - str31inf.height
                                str31inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr31inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>В подшипниках со статической осевой нагрузкой перекос наружного кольца проявляется на частотах k·fнар ± n·fс.</b>"
                    }
                }
        Rectangle {
            id: str31col2
            anchors.top: str31col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr31col21.height+textstr31col22.height+textstr31col23.height+textstr31col24.height+textstr31col25.height),(rowstr31col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state312"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col21.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col22.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col23.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col24.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col25.text)))
                    }
                    PropertyChanges {
                        target: str31col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col21
                            text: parseFloat(nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col22
                            text: parseFloat(nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col23
                            text: parseFloat(nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col24
                            text: parseFloat(Number(nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col25
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col24.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar15"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col25
                            text: parseFloat(Number(nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col3
            anchors.top: str31col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state313"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col31.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col32.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col33.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col34.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col35.text)))
                    }
                    PropertyChanges {
                        target: str31col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col31
                            text: parseFloat(2*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col32
                            text: parseFloat(2*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col33
                            text: parseFloat(2*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col34
                            text: parseFloat(Number(2*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col35
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col34.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar25"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col35
                            text: parseFloat(Number(2*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col4
            anchors.top: str31col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state314"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col41.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col42.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col43.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col44.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col45.text)))
                    }
                    PropertyChanges {
                        target: str31col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col41
                            text: parseFloat(3*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col42
                            text: parseFloat(3*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col43
                            text: parseFloat(3*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col44
                            text: parseFloat(Number(3*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col45
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col44.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar35"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col45
                            text: parseFloat(Number(3*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col5
            anchors.top: str31col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state315"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col51.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col52.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col53.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col54.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col55.text)))
                    }
                    PropertyChanges {
                        target: str31col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col51
                            text: parseFloat(4*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col52
                            text: parseFloat(4*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col53
                            text: parseFloat(4*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col54
                            text: parseFloat(Number(4*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col55
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col54.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar45"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col55
                            text: parseFloat(Number(4*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col6
            anchors.top: str31col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state316"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col61.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col62.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col63.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col64.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col65.text)))
                    }
                    PropertyChanges {
                        target: str31col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col61
                            text: parseFloat(5*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col62
                            text: parseFloat(5*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col63
                            text: parseFloat(5*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col64
                            text: parseFloat(Number(5*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col65
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col64.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar55"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col65
                            text: parseFloat(Number(5*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col7
            anchors.top: str31col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state317"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col71.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col72.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col73.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col74.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col75.text)))
                    }
                    PropertyChanges {
                        target: str31col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col71
                            text: parseFloat(6*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col72
                            text: parseFloat(6*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col73
                            text: parseFloat(6*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col74
                            text: parseFloat(Number(6*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col75
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col74.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar65"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col75
                            text: parseFloat(Number(6*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col8
            anchors.top: str31col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state318"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col81.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col82.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col83.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col84.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col85.text)))
                    }
                    PropertyChanges {
                        target: str31col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col81
                            text: parseFloat(7*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col82
                            text: parseFloat(7*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col83
                            text: parseFloat(7*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col84
                            text: parseFloat(Number(7*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col85
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col84.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar75"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col85
                            text: parseFloat(Number(7*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str31col9
            anchors.top: str31col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str31col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state319"
                    when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr31col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col91.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col92.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col93.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col94.text)))
                        | (Number(parseFloat(plus))>=Number(parseFloat(textstr31col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr31col95.text)))
                    }
                    PropertyChanges {
                        target: str31col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr31col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr31col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col91
                            text: parseFloat(8*nar1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col92
                            text: parseFloat(8*nar1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col93
                            text: parseFloat(8*nar1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col94
                            text: parseFloat(Number(8*nar1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr31col95
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr31col94.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "perraknar85"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr31col95
                            text: parseFloat(Number(8*nar1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col1
            anchors.top: str31inf.bottom
            anchors.left: str2col1.left
            anchors.right: str2col1.right
            //width: str2col1.width*2/3
            //height: 20
            height: rowstr32col1.height+5
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse2.clicked(mouse2);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str32inf.height = textstr32inf.height+10
                                str32inf.visible = "true"
                                textstr32inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state321"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col2.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col3.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col4.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col5.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col6.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col7.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col8.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr32col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col9.text)))
                    }
                    PropertyChanges {
                        target: str32col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str32col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr32col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос внутреннего кольца"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str32inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str32col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str32inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse32
                            anchors.fill: parent
                            onClicked: {
                                str32inf.visible = "false"
                                textstr32inf.color = "white"
                                rec.height =+ hei - str32inf.height
                                flick.contentHeight =+ heiflick - str32inf.height
                                str32inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr32inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>В радиально-упорных и упорных подшипниках при перекосе внутреннего кольца могут появляться частоты k·(f1-fс).</b>"
                    }
                }
        Rectangle {
            id: str32col2
            anchors.top: str32col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state322"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col2.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col2.text)))
                    PropertyChanges {
                        target: str32col2
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col2
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col2
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn1"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col2
                            text: parseFloat(f1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col3
            anchors.top: str32col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state323"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col3.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col3.text)))
                    PropertyChanges {
                        target: str32col3
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col3
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col3
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn2"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col3
                            text: parseFloat(2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col4
            anchors.top: str32col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state324"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col4.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col4.text)))
                    PropertyChanges {
                        target: str32col4
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col4
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col4
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn3"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col4
                            text: parseFloat(3*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col5
            anchors.top: str32col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state325"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col5.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col5.text)))
                    PropertyChanges {
                        target: str32col5
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col5
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col5
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn4"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col5
                            text: parseFloat(4*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col6
            anchors.top: str32col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state326"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col6.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col6.text)))
                    PropertyChanges {
                        target: str32col6
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col6
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col6
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn5"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col6
                            text: parseFloat(5*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col7
            anchors.top: str32col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state327"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col7.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col7.text)))
                    PropertyChanges {
                        target: str32col7
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col7
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col7
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn6"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col7
                            text: parseFloat(6*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col8
            anchors.top: str32col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state328"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col8.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col8.text)))
                    PropertyChanges {
                        target: str32col8
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col8
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col8
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn7"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col8
                            text: parseFloat(7*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str32col9
            anchors.top: str32col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str32col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
                State {
                    name: "state329"
                    when: (Number(parseFloat(plus))>=Number(parseFloat(textstr32col9.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr32col9.text)))
                    PropertyChanges {
                        target: str32col9
                        color: "tomato"
                    }
                }
            ]
            RowLayout {
                id: rowstr32col9
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr32col9
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "per2vn8"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr32col9
                            text: parseFloat(8*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col1
            anchors.top: str32inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr33col1.height),(str33col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse2.clicked(mouse2);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str33inf.height = textstr33inf.height+10
                                str33inf.visible = "true"
                                textstr33inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state331"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col23.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col24.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col33.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col34.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col43.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col44.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col53.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col54.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col63.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col64.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col73.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col74.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col83.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col84.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col92.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col93.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr33col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col94.text)))
                    }
                    PropertyChanges {
                        target: str33col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str331col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str33col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr33col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Нарушение формы тел качения"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str331col1
            anchors.top: str32inf.bottom
            anchors.left: str33col1.right
            width: str2col1.width/3
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr331col1
                width: parent.width
                Label {
                    id: textstr331col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fфтк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr332col1
                    anchors.top: textstr331col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк-fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr333col1
                    anchors.top: textstr332col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr334col1
                    anchors.top: textstr333col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк+fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str33inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str33col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str33inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse33
                            anchors.fill: parent
                            onClicked: {
                                str33inf.visible = "false"
                                textstr33inf.color = "white"
                                rec.height =+ hei - str33inf.height
                                flick.contentHeight =+ heiflick - str33inf.height
                                str33inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr33inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Нарушение формы тел качения проявляется на частотах fфтк, k·fтк и k·fтк ± fс, где k = 1, 2, ...z (z - количество тел качения).</b>"+
                              "<br>Обычно сопровождается дефектом обоймы.</b>"
                    }
                }
        Rectangle {
            id: str33col2
            anchors.top: str33col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr33col21.height+textstr33col22.height+textstr33col23.height+textstr33col24.height),(rowstr33col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state332"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col21.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col22.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col23.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col24.text)))
                }
                PropertyChanges {
                    target: str33col2
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col21
                            text: parseFloat(ftk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col22
                            text: parseFloat(tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col23
                            text: parseFloat(tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col24
                            text: parseFloat(Number(tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col3
            anchors.top: str33col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state333"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col31.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col32.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col33.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col34.text)))
                }
                PropertyChanges {
                    target: str33col3
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col32
                            text: parseFloat(2*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col33
                            text: parseFloat(2*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col34
                            text: parseFloat(Number(2*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col4
            anchors.top: str33col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state334"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col41.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col42.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col43.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col44.text)))
                }
                PropertyChanges {
                    target: str33col4
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col42
                            text: parseFloat(3*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col43
                            text: parseFloat(3*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col44
                            text: parseFloat(Number(3*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col5
            anchors.top: str33col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state335"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col51.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col52.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col53.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col54.text)))
                }
                PropertyChanges {
                    target: str33col5
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col52
                            text: parseFloat(4*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col53
                            text: parseFloat(4*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col54
                            text: parseFloat(Number(4*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col6
            anchors.top: str33col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state336"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col61.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col62.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col63.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col64.text)))
                }
                PropertyChanges {
                    target: str33col6
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col62
                            text: parseFloat(5*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col63
                            text: parseFloat(5*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col64
                            text: parseFloat(Number(5*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col7
            anchors.top: str33col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state337"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col71.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col72.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col73.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col74.text)))
                }
                PropertyChanges {
                    target: str33col7
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col72
                            text: parseFloat(6*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col73
                            text: parseFloat(6*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col74
                            text: parseFloat(Number(6*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col8
            anchors.top: str33col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state338"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col81.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col82.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col83.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col84.text)))
                }
                PropertyChanges {
                    target: str33col8
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col82
                            text: parseFloat(7*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col83
                            text: parseFloat(7*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col84
                            text: parseFloat(Number(7*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str33col9
            anchors.top: str33col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str33col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state339"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr33col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col91.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col92.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col93.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr33col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr33col94.text)))
                }
                PropertyChanges {
                    target: str33col9
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr33col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr33col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr33col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col92
                            text: parseFloat(8*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col93
                            text: parseFloat(8*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr33col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr33col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "formtk84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr33col94
                            text: parseFloat(Number(8*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col1
            anchors.top: str33inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr34col1.height),(str34col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse2.clicked(mouse2);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                str34inf.height = textstr34inf.height+10
                                str34inf.visible = "true"
                                textstr34inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state341"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col23.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col24.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col25.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col33.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col34.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col35.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col43.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col44.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col45.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col53.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col54.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col55.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col63.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col64.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col65.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col73.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col74.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col75.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col83.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col84.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col85.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col92.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col93.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col94.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr34col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col95.text)))
                    }
                    PropertyChanges {
                        target: str34col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str341col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str34col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr34col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Перекос внутреннего кольца и дефекты тел качения (нарушение формы, неравномерный износ, сколы)"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str341col1
            anchors.top: str33inf.bottom
            anchors.left: str34col1.right
            width: str2col1.width/3
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr341col1
                width: parent.width
                Label {
                    id: textstr341col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fтк-2·f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr342col1
                    anchors.top: textstr341col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк-f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr343col1
                    anchors.top: textstr342col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr344col1
                    anchors.top: textstr343col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк+f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr345col1
                    anchors.top: textstr344col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fтк+2·fсеп"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str34inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str34col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str34inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse34
                            anchors.fill: parent
                            onClicked: {
                                str34inf.visible = "false"
                                textstr34inf.color = "white"
                                rec.height =+ hei - str34inf.height
                                flick.contentHeight =+ heiflick - str34inf.height
                                str34inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr34inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>В подшипниках со статической осевой нагрузкой проявляется на частотах k·fтк ± n·f1.</b>"
                    }
                }
        Rectangle {
            id: str34col2
            anchors.top: str34col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr34col21.height+textstr34col22.height+textstr34col23.height+textstr34col24.height+textstr34col25.height),(rowstr34col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state342"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col21.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col22.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col23.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col24.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col25.text)))
                }
                PropertyChanges {
                    target: str34col2
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col21
                            text: parseFloat(tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col22
                            text: parseFloat(tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col23
                            text: parseFloat(tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col24
                            text: parseFloat(Number(tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col25
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col24.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk15"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col25
                            text: parseFloat(Number(tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col3
            anchors.top: str34col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state343"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col31.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col32.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col33.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col34.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col35.text)))
                }
                PropertyChanges {
                    target: str34col3
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col31
                            text: parseFloat(2*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col32
                            text: parseFloat(2*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col33
                            text: parseFloat(2*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col34
                            text: parseFloat(Number(2*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col35
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col34.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk25"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col35
                            text: parseFloat(Number(2*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col4
            anchors.top: str34col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state344"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col41.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col42.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col43.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col44.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col45.text)))
                }
                PropertyChanges {
                    target: str34col4
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col41
                            text: parseFloat(3*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col42
                            text: parseFloat(3*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col43
                            text: parseFloat(3*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col44
                            text: parseFloat(Number(3*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col45
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col44.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk35"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col45
                            text: parseFloat(Number(3*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col5
            anchors.top: str34col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state345"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col51.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col52.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col53.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col54.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col55.text)))
                }
                PropertyChanges {
                    target: str34col5
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col51
                            text: parseFloat(4*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col52
                            text: parseFloat(4*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col53
                            text: parseFloat(4*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col54
                            text: parseFloat(Number(4*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col55
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col54.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk45"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col55
                            text: parseFloat(Number(4*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col6
            anchors.top: str34col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state346"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col61.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col62.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col63.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col64.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col65.text)))
                }
                PropertyChanges {
                    target: str34col6
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col61
                            text: parseFloat(5*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col62
                            text: parseFloat(5*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col63
                            text: parseFloat(5*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col64
                            text: parseFloat(Number(5*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col65
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col64.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk55"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col65
                            text: parseFloat(Number(5*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col7
            anchors.top: str34col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state347"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col71.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col72.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col73.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col74.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col75.text)))
                }
                PropertyChanges {
                    target: str34col7
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col71
                            text: parseFloat(6*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col72
                            text: parseFloat(6*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col73
                            text: parseFloat(6*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col74
                            text: parseFloat(Number(6*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col75
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col74.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk65"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col75
                            text: parseFloat(Number(6*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col8
            anchors.top: str34col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state348"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col81.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col82.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col83.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col84.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col85.text)))
                }
                PropertyChanges {
                    target: str34col8
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col81
                            text: parseFloat(7*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col82
                            text: parseFloat(7*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col83
                            text: parseFloat(7*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col84
                            text: parseFloat(Number(7*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col85
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col84.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk75"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col85
                            text: parseFloat(Number(7*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str34col9
            anchors.top: str34col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str34col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state349"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr34col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col91.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col92.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col93.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col94.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr34col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr34col95.text)))
                }
                PropertyChanges {
                    target: str34col9
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr34col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr34col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col91
                            text: parseFloat(8*tk1-2*f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col92
                            text: parseFloat(8*tk1-f1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col93
                            text: parseFloat(8*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col94
                            text: parseFloat(Number(8*tk1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr34col95
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr34col94.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "pertk85"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr34col95
                            text: parseFloat(Number(8*tk1)+2*(Number(f1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col1
            anchors.top: str34inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr35col1.height),(str35col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse2.clicked(mouse2);
                                mouse36.clicked(mouse36);mouse37.clicked(mouse37);
                                ris010.source = "file:./Images/ris010.png"
                                str35inf.height = textstr35inf.height+ris010.height+10
                                str35inf.visible = "true"
                                textstr35inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state351"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr35col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col92.text)))
                    }
                    PropertyChanges {
                        target: str35col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str351col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str35col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr35col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Износ тел качения и сепаратора"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str351col1
            anchors.top: str34inf.bottom
            anchors.left: str34col1.right
            width: str2col1.width/3
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr351col1
                width: parent.width
                Label {
                    id: textstr351col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fc"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr352col1
                    anchors.top: textstr351col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "f1-fc"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str35inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str35col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str35inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse35
                            anchors.fill: parent
                            onClicked: {
                                str35inf.visible = "false"
                                textstr35inf.color = "white"
                                rec.height =+ hei - str35inf.height
                                flick.contentHeight =+ heiflick - str35inf.height
                                str35inf.height = 0
                                ris010.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr35inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Данные дефекты могут проявляться на частотах fс, k·fс, f1-fс, k·(f1-fс).</b>"+
                              "<br>По спектру огибающей вибрации, в первую очередь, обнаруживается дефект, представляющий собой выкрашивание поверхности. Это проявляется в спектре ростом составляющих с частотой  fc (при статических нагрузках) или f1-fc. Дополнительным признаком является быстрое уменьшение по амплитуде гармоник, кратных этим частотам.</b>"
                    }
                    Image {
                                                id: ris010
                                                anchors.top: textstr35inf.bottom
                                                anchors.topMargin: 5
                                                anchors.leftMargin: 5
                                                anchors.rightMargin: 5
                                                anchors.bottomMargin: 0
                                                anchors.left: parent.left
                                                anchors.right: parent.right
                                                //source: "Pic/ris001.png"
                                                fillMode: Image.PreserveAspectFit
                                                mipmap: true
                                                //mirror: true
                                                smooth: true
                                            }
                }
        Rectangle {
            id: str35col2
            anchors.top: str35col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr35col21.height+textstr35col22.height),(rowstr35col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state352"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col21.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col22.text)))
                }
                PropertyChanges {
                    target: str35col2
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col21
                            text: parseFloat(sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col22
                            text: parseFloat(f1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col3
            anchors.top: str35col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state353"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col31.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col32.text)))
                }
                PropertyChanges {
                    target: str35col3
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col31
                            text: parseFloat(2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col32
                            text: parseFloat(2*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col4
            anchors.top: str35col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state354"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col41.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col42.text)))
                }
                PropertyChanges {
                    target: str35col4
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col41
                            text: parseFloat(3*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col42
                            text: parseFloat(3*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col5
            anchors.top: str35col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state355"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col51.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col52.text)))
                }
                PropertyChanges {
                    target: str35col5
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col51
                            text: parseFloat(4*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col52
                            text: parseFloat(4*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col6
            anchors.top: str35col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state356"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col61.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col62.text)))
                }
                PropertyChanges {
                    target: str35col6
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col61
                            text: parseFloat(5*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col62
                            text: parseFloat(5*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col7
            anchors.top: str35col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state357"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col71.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col72.text)))
                }
                PropertyChanges {
                    target: str35col7
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col71
                            text: parseFloat(6*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col72
                            text: parseFloat(6*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col8
            anchors.top: str35col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state358"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col81.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col82.text)))
                }
                PropertyChanges {
                    target: str35col8
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col81
                            text: parseFloat(7*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col82
                            text: parseFloat(7*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str35col9
            anchors.top: str35col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str35col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state359"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr35col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col91.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr35col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr35col92.text)))
                }
                PropertyChanges {
                    target: str35col9
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr35col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr35col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col91
                            text: parseFloat(8*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr35col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr35col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "izn82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr35col92
                            text: parseFloat(8*(f1-sep1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col1
            anchors.top: str35inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr36col1.height),(str36col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse2.clicked(mouse2);mouse37.clicked(mouse37);
                                ris011.source = "file:./Images/ris011.png"
                                ris012.source = "file:./Images/ris012.png"
                                str36inf.height = textstr36inf.height+ris011.height+ris012.height+10
                                str36inf.visible = "true"
                                textstr36inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state361"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col23.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col24.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col25.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col33.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col34.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col35.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col43.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col44.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col45.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col53.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col54.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col55.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col63.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col64.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col65.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col73.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col74.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col75.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col83.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col84.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col85.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col92.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col93.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col94.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr36col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col95.text)))
                    }
                    PropertyChanges {
                        target: str36col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str361col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str36col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr36col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Раковины, сколы на телах качения"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str361col1
            anchors.top: str35inf.bottom
            anchors.left: str36col1.right
            width: str2col1.width/3
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr361col1
                width: parent.width
                Label {
                    id: textstr361col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "2·fтк-2·fс"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr362col1
                    anchors.top: textstr361col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "2·fтк-fс"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr363col1
                    anchors.top: textstr362col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "2·fтк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr364col1
                    anchors.top: textstr363col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "2·fтк+fс"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr365col1
                    anchors.top: textstr364col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "2·fтк+2·fс"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str36inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str36col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str36inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse36
                            anchors.fill: parent
                            onClicked: {
                                str36inf.visible = "false"
                                textstr36inf.color = "white"
                                rec.height =+ hei - str36inf.height
                                flick.contentHeight =+ heiflick - str36inf.height
                                str36inf.height = 0
                                ris011.source = ""
                                ris012.source = ""
                            }
                        }
                    }
                    Text {
                        id: textstr36inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>В прямом спектре проявляются на частотах 2·k·fтк (могут присутствовать k·fтк ± n·fс), в спектре огибающей 2·k·fтк ± n·fс (могут присутствовать k·fтк ± n·fс).</b>"+
                              "<br>Сопровождаются появлением ударных импульсов, действующих между телом качения и каждой из поверхностей колец. Поэтому основная частота ударов происходит при 2·fтк. Но так как амплитуды ударных импульсов, действующих между телом качения и каждой из поверхностей могут отличаться и зависят, кроме того, от угла поворота сепаратора, в спектре огибающей появляются дополнительные составляющие в окрестностях частоты 2·fтк. В случае износа сепаратора эти составляющие могут иметь случайную модуляцию.</b>"
                    }
                    Image {
                                                id: ris011
                                                anchors.top: textstr36inf.bottom
                                                anchors.topMargin: 5
                                                anchors.leftMargin: 5
                                                anchors.rightMargin: 5
                                                anchors.bottomMargin: 0
                                                anchors.left: parent.left
                                                anchors.right: parent.right
                                                //source: "Pic/ris001.png"
                                                fillMode: Image.PreserveAspectFit
                                                mipmap: true
                                                //mirror: true
                                                smooth: true
                                                cache : false
                                            }
                    Image {
                                                id: ris012
                                                anchors.top: ris011.bottom
                                                anchors.topMargin: 5
                                                anchors.leftMargin: 5
                                                anchors.rightMargin: 5
                                                anchors.bottomMargin: 0
                                                anchors.left: parent.left
                                                anchors.right: parent.right
                                                //source: "Pic/ris001.png"
                                                fillMode: Image.PreserveAspectFit
                                                mipmap: true
                                                //mirror: true
                                                smooth: true
                                                cache : false
                                            }
//                    source.grabToImage(function(result) {
//                                               ris012.source = "Pic/ris012.png";
//                                           },
//                                           Qt.size(50, 50));
                }
        Rectangle {
            id: str36col2
            anchors.top: str36col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr36col21.height+textstr36col22.height+textstr36col23.height+textstr36col24.height+textstr36col25.height),(rowstr36col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state362"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col21.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col22.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col23.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col23.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col24.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col24.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col25.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col25.text)))
                }
                PropertyChanges {
                    target: str36col2
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col21
                            text: parseFloat(2*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col22
                            text: parseFloat(2*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col23
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col22.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk13"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col23
                            text: parseFloat(2*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col24
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col23.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk14"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col24
                            text: parseFloat(Number(2*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col25
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col24.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk15"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col25
                            text: parseFloat(Number(2*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col3
            anchors.top: str36col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state363"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col31.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col32.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col33.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col33.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col34.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col34.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col35.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col35.text)))
                }
                PropertyChanges {
                    target: str36col3
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk21"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col31
                            text: parseFloat(4*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk22"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col32
                            text: parseFloat(4*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col33
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col32.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk23"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col33
                            text: parseFloat(4*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col34
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col33.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk24"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col34
                            text: parseFloat(Number(4*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col35
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col34.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk25"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col35
                            text: parseFloat(Number(4*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col4
            anchors.top: str36col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state364"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col41.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col42.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col43.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col43.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col44.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col44.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col45.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col45.text)))
                }
                PropertyChanges {
                    target: str36col4
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk31"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col41
                            text: parseFloat(6*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk32"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col42
                            text: parseFloat(6*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col43
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col42.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk33"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col43
                            text: parseFloat(6*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col44
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col43.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk34"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col44
                            text: parseFloat(Number(6*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col45
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col44.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk35"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col45
                            text: parseFloat(Number(6*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col5
            anchors.top: str36col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state365"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col51.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col52.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col53.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col53.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col54.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col54.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col55.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col55.text)))
                }
                PropertyChanges {
                    target: str36col5
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk41"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col51
                            text: parseFloat(8*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk42"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col52
                            text: parseFloat(8*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col53
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col52.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk43"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col53
                            text: parseFloat(8*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col54
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col53.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk44"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col54
                            text: parseFloat(Number(8*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col55
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col54.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk45"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col55
                            text: parseFloat(Number(8*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col6
            anchors.top: str36col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state366"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col61.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col62.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col63.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col63.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col64.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col64.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col65.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col65.text)))
                }
                PropertyChanges {
                    target: str36col6
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk51"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col61
                            text: parseFloat(10*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk52"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col62
                            text: parseFloat(10*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col63
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col62.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk53"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col63
                            text: parseFloat(10*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col64
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col63.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk54"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col64
                            text: parseFloat(Number(10*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col65
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col64.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk55"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col65
                            text: parseFloat(Number(10*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col7
            anchors.top: str36col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state367"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col71.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col72.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col73.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col73.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col74.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col74.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col75.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col75.text)))
                }
                PropertyChanges {
                    target: str36col7
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk61"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col71
                            text: parseFloat(12*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk62"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col72
                            text: parseFloat(12*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col73
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col72.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk63"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col73
                            text: parseFloat(12*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col74
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col73.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk64"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col74
                            text: parseFloat(Number(12*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col75
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col74.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk65"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col75
                            text: parseFloat(Number(12*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col8
            anchors.top: str36col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state368"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col81.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col82.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col83.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col83.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col84.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col84.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col85.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col85.text)))
                }
                PropertyChanges {
                    target: str36col8
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk71"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col81
                            text: parseFloat(14*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk72"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col82
                            text: parseFloat(14*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col83
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col82.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk73"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col83
                            text: parseFloat(14*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col84
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col83.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk74"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col84
                            text: parseFloat(Number(14*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col85
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col84.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk75"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col85
                            text: parseFloat(Number(14*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str36col9
            anchors.top: str36col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str36col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state369"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr36col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col91.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col92.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col93.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col93.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col94.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col94.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr36col95.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr36col95.text)))
                }
                PropertyChanges {
                    target: str36col9
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr36col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr36col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk81"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col91
                            text: parseFloat(16*tk1-2*sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk82"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col92
                            text: parseFloat(16*tk1-sep1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col93
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col92.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk83"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col93
                            text: parseFloat(16*tk1).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col94
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col93.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk84"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col94
                            text: parseFloat(Number(16*tk1)+Number(sep1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr36col95
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr36col94.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "rtk85"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr36col95
                            text: parseFloat(Number(16*tk1)+2*(Number(sep1))).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str37col1
            anchors.top: str36inf.bottom
            anchors.left: str2col1.left
            //anchors.right: str2col1.right
            width: str2col1.width*2/3
            //height: 20
            height: Math.max((rowstr37col1.height),(str37col2.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            MouseArea {
                            anchors.fill: parent
                            cursorShape: Qt.WhatsThisCursor
                            onClicked: {
                                mouse3.clicked(mouse3);mouse4.clicked(mouse4);mouse5.clicked(mouse5);
                                mouse6.clicked(mouse6);mouse7.clicked(mouse7);mouse8.clicked(mouse8);
                                mouse9.clicked(mouse9);mouse10.clicked(mouse10);mouse11.clicked(mouse11);
                                mouse12.clicked(mouse12);mouse13.clicked(mouse13);mouse14.clicked(mouse14);
                                mouse15.clicked(mouse15);mouse16.clicked(mouse16);mouse17.clicked(mouse17);
                                mouse18.clicked(mouse18);mouse19.clicked(mouse19);mouse20.clicked(mouse20);
                                mouse21.clicked(mouse21);mouse22.clicked(mouse22);mouse23.clicked(mouse23);
                                mouse24.clicked(mouse24);mouse25.clicked(mouse25);mouse26.clicked(mouse26);
                                mouse27.clicked(mouse27);mouse28.clicked(mouse28);mouse29.clicked(mouse29);
                                mouse30.clicked(mouse30);mouse31.clicked(mouse31);mouse32.clicked(mouse32);
                                mouse33.clicked(mouse33);mouse34.clicked(mouse34);mouse35.clicked(mouse35);
                                mouse36.clicked(mouse36);mouse2.clicked(mouse2);
                                str37inf.height = textstr37inf.height+10
                                str37inf.visible = "true"
                                textstr37inf.color = "#353637"
                                rec.height =+ hei
                                flick.contentHeight =+ heiflick
                                }
                        }
            states: [
                State {
                    name: "state371"
                    when: { (swt.checked)  & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col21.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col22.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col31.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col32.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col41.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col42.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col51.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col52.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col61.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col62.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col71.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col72.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col81.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col82.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col91.text)))
                                           & !(Number(parseFloat(plus))>=Number(parseFloat(textstr37col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col92.text)))
                    }
                    PropertyChanges {
                        target: str37col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str371col1
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col2
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col3
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col4
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col5
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col6
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col7
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col8
                        height: 0
                        visible: false
                    }
                    PropertyChanges {
                        target: str37col9
                        height: 0
                        visible: false
                    }
                }
            ]
            Row {
                id: rowstr37col1
                anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col1
                    anchors.leftMargin: 5
                    anchors.rightMargin: 5
                    text: "Дефект группы поверхностей трения"
                    //font.bold: true
                    padding: 2
                    width: str1col1.width/2
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str371col1
            anchors.top: str36inf.bottom
            anchors.left: str36col1.right
            width: str2col1.width/3
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            RowLayout {
                id: rowstr371col1
                width: parent.width
                Label {
                    id: textstr371col1
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top
                    anchors.topMargin: 5
                    text: "fнк+f1"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr372col1
                    anchors.top: textstr371col1.bottom
                    anchors.horizontalCenter: parent.horizontalCenter
                    text: "fнк+fвк"
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
                    id: str37inf
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: str37col1.bottom
                    height: 0//textstr2inf.height+10
                    visible: false
                    border.width: 1
                    border.color: "white"
                    radius: 10
                    color: "paleturquoise"
                    Text {
                        visible: str37inf.visible
                        anchors.top: parent.top
                        anchors.right: parent.right
                        anchors.rightMargin: 10
                        font.pixelSize: 16
                        text: "X"
                        MouseArea {
                            id: mouse37
                            anchors.fill: parent
                            onClicked: {
                                str37inf.visible = "false"
                                textstr37inf.color = "white"
                                rec.height =+ hei - str37inf.height
                                flick.contentHeight =+ heiflick - str37inf.height
                                str37inf.height = 0
                            }
                        }
                    }
                    Text {
                        id: textstr37inf
                        anchors.top: parent.top
                        //anchors.topMargin: 5
                        anchors.leftMargin: 5
                        anchors.rightMargin: 5
                        anchors.bottomMargin: 5
                        anchors.left: parent.left
                        anchors.right: parent.right
                        font.pixelSize: 16
                        wrapMode: Text.WordWrap
                        text: "<br>Дефект проявляется в спектре огибающей на частотах fнар+fвн, fнар+f1.</b>"
                    }
                }
        Rectangle {
            id: str37col2
            anchors.top: str37col1.top
            anchors.left: str2col2.left
            anchors.right: str2col2.right
            height: Math.max((10+textstr37col21.height+textstr37col22.height),(rowstr37col1.height))
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state372"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col21.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col21.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col22.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col22.text)))
                }
                PropertyChanges {
                    target: str37col2
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col2
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col21
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "g11"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr37col21
                            text: parseFloat(Number(nar1)+Number(f1)).toFixed(2)
                        }
                    }
                    ]
                }
                Label {
                    id: textstr37col22
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col21.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                    states: [
                    State {
                        name: "g12"
                        //when: butraschet.clicked

                        PropertyChanges {
                            target: textstr37col22
                            text: parseFloat(Number(nar1)+Number(vn1)).toFixed(2)
                        }
                    }
                    ]
                }
            }
        }
        Rectangle {
            id: str37col3
            anchors.top: str37col1.top
            anchors.left: str2col3.left
            anchors.right: str2col3.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state373"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col31.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col31.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col32.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col32.text)))
                }
                PropertyChanges {
                    target: str37col3
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col3
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col31
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col32
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col31.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str37col4
            anchors.top: str37col1.top
            anchors.left: str2col4.left
            anchors.right: str2col4.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state374"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col41.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col41.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col42.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col42.text)))
                }
                PropertyChanges {
                    target: str37col4
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col4
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col41
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col42
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col41.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str37col5
            anchors.top: str37col1.top
            anchors.left: str2col5.left
            anchors.right: str2col5.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state375"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col51.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col51.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col52.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col52.text)))
                }
                PropertyChanges {
                    target: str37col5
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col5
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col51
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col52
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col51.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str37col6
            anchors.top: str37col1.top
            anchors.left: str2col6.left
            anchors.right: str2col6.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state376"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col61.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col61.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col62.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col62.text)))
                }
                PropertyChanges {
                    target: str37col6
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col6
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col61
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col62
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col61.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str37col7
            anchors.top: str37col1.top
            anchors.left: str2col7.left
            anchors.right: str2col7.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state377"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col71.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col71.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col72.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col72.text)))
                }
                PropertyChanges {
                    target: str37col7
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col7
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col71
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col72
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col71.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str37col8
            anchors.top: str37col1.top
            anchors.left: str2col8.left
            anchors.right: str2col8.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state378"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col81.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col81.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col82.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col82.text)))
                }
                PropertyChanges {
                    target: str37col8
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col8
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col81
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col82
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col81.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
        Rectangle {
            id: str37col9
            anchors.top: str37col1.top
            anchors.left: str2col9.left
            anchors.right: str2col9.right
            height: str37col1.height
            color: "lightgreen"
            border.width: 1
            border.color: "white"
            radius: 10
            states: [
            State {
                name: "state379"
                when: {(Number(parseFloat(plus))>=Number(parseFloat(textstr37col91.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col91.text)))
                    | (Number(parseFloat(plus))>=Number(parseFloat(textstr37col92.text)) & (Number(parseFloat(minus)))<=Number(parseFloat(textstr37col92.text)))
                }
                PropertyChanges {
                    target: str37col9
                    color: "tomato"
                }
            }
        ]
            RowLayout {
                id: rowstr37col9
                //anchors.verticalCenter: parent.verticalCenter
                width: parent.width
                Label {
                    id: textstr37col91
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.top//textstr28col2.bottom
                    anchors.topMargin: 5
                    anchors.bottomMargin: 5
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
                Label {
                    id: textstr37col92
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: textstr37col91.bottom
                    text: "-"
                    //font.bold: true
                    font.pixelSize: 16
                    wrapMode: Text.WordWrap
                }
            }
        }
}
        }
    }
}
